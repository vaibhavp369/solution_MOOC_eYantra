
Experiment-2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  000011ee  00001282  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800142  00800142  000012c4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001320  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000125b  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000090e  00000000  00000000  000026ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000094f  00000000  00000000  00002fb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003908  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000631  00000000  00000000  00003b08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a13  00000000  00000000  00004139  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004b4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b4 c0       	rjmp	.+360    	; 0x16a <__ctors_end>
       2:	00 00       	nop
       4:	ce c0       	rjmp	.+412    	; 0x1a2 <__bad_interrupt>
       6:	00 00       	nop
       8:	cc c0       	rjmp	.+408    	; 0x1a2 <__bad_interrupt>
       a:	00 00       	nop
       c:	ca c0       	rjmp	.+404    	; 0x1a2 <__bad_interrupt>
       e:	00 00       	nop
      10:	c8 c0       	rjmp	.+400    	; 0x1a2 <__bad_interrupt>
      12:	00 00       	nop
      14:	c6 c0       	rjmp	.+396    	; 0x1a2 <__bad_interrupt>
      16:	00 00       	nop
      18:	c4 c0       	rjmp	.+392    	; 0x1a2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c2 c0       	rjmp	.+388    	; 0x1a2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c0 c0       	rjmp	.+384    	; 0x1a2 <__bad_interrupt>
      22:	00 00       	nop
      24:	be c0       	rjmp	.+380    	; 0x1a2 <__bad_interrupt>
      26:	00 00       	nop
      28:	bc c0       	rjmp	.+376    	; 0x1a2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ba c0       	rjmp	.+372    	; 0x1a2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	b8 c0       	rjmp	.+368    	; 0x1a2 <__bad_interrupt>
      32:	00 00       	nop
      34:	b6 c0       	rjmp	.+364    	; 0x1a2 <__bad_interrupt>
      36:	00 00       	nop
      38:	b4 c0       	rjmp	.+360    	; 0x1a2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	b2 c0       	rjmp	.+356    	; 0x1a2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	b0 c0       	rjmp	.+352    	; 0x1a2 <__bad_interrupt>
      42:	00 00       	nop
      44:	ae c0       	rjmp	.+348    	; 0x1a2 <__bad_interrupt>
      46:	00 00       	nop
      48:	ac c0       	rjmp	.+344    	; 0x1a2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	aa c0       	rjmp	.+340    	; 0x1a2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	a8 c0       	rjmp	.+336    	; 0x1a2 <__bad_interrupt>
      52:	00 00       	nop
      54:	e8 c0       	rjmp	.+464    	; 0x226 <__vector_21>
      56:	00 00       	nop
      58:	a4 c0       	rjmp	.+328    	; 0x1a2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a2 c0       	rjmp	.+324    	; 0x1a2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a0 c0       	rjmp	.+320    	; 0x1a2 <__bad_interrupt>
      62:	00 00       	nop
      64:	9e c0       	rjmp	.+316    	; 0x1a2 <__bad_interrupt>
	...

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ee ee       	ldi	r30, 0xEE	; 238
     17e:	f1 e1       	ldi	r31, 0x11	; 17
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 34       	cpi	r26, 0x42	; 66
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a2 e4       	ldi	r26, 0x42	; 66
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a4 34       	cpi	r26, 0x44	; 68
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	6b d0       	rcall	.+214    	; 0x274 <main>
     19e:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <_exit>

000001a2 <__bad_interrupt>:
     1a2:	2e cf       	rjmp	.-420    	; 0x0 <__vectors>

000001a4 <sharp_sensor_pin_config>:

	// clear the MUX5 bit for next conversion
	ADCSRB_reg = 0x00;

	// clear the MUX[4:0] bits for next conversion
	ADMUX_reg = 0x00;
     1a4:	38 98       	cbi	0x07, 0	; 7
     1a6:	40 98       	cbi	0x08, 0	; 8
     1a8:	08 95       	ret

000001aa <adc_init>:
     1aa:	f8 94       	cli
     1ac:	ea e7       	ldi	r30, 0x7A	; 122
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	8e 68       	ori	r24, 0x8E	; 142
     1b4:	80 83       	st	Z, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	8f 78       	andi	r24, 0x8F	; 143
     1ba:	80 83       	st	Z, r24
     1bc:	eb e7       	ldi	r30, 0x7B	; 123
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	82 7b       	andi	r24, 0xB2	; 178
     1c4:	80 83       	st	Z, r24
     1c6:	ec e7       	ldi	r30, 0x7C	; 124
     1c8:	f0 e0       	ldi	r31, 0x00	; 0
     1ca:	80 e4       	ldi	r24, 0x40	; 64
     1cc:	80 83       	st	Z, r24
     1ce:	80 81       	ld	r24, Z
     1d0:	8f 7d       	andi	r24, 0xDF	; 223
     1d2:	80 83       	st	Z, r24
     1d4:	80 b7       	in	r24, 0x30	; 48
     1d6:	80 68       	ori	r24, 0x80	; 128
     1d8:	80 bf       	out	0x30, r24	; 48
     1da:	78 94       	sei
     1dc:	08 95       	ret

000001de <select_adc_channel>:
     1de:	88 30       	cpi	r24, 0x08	; 8
     1e0:	60 f4       	brcc	.+24     	; 0x1fa <select_adc_channel+0x1c>
     1e2:	eb e7       	ldi	r30, 0x7B	; 123
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	90 81       	ld	r25, Z
     1e8:	97 7f       	andi	r25, 0xF7	; 247
     1ea:	90 83       	st	Z, r25
     1ec:	ec e7       	ldi	r30, 0x7C	; 124
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	80 83       	st	Z, r24
     1f2:	80 81       	ld	r24, Z
     1f4:	87 70       	andi	r24, 0x07	; 7
     1f6:	80 83       	st	Z, r24
     1f8:	08 95       	ret
     1fa:	98 ef       	ldi	r25, 0xF8	; 248
     1fc:	98 0f       	add	r25, r24
     1fe:	98 30       	cpi	r25, 0x08	; 8
     200:	58 f4       	brcc	.+22     	; 0x218 <select_adc_channel+0x3a>
     202:	eb e7       	ldi	r30, 0x7B	; 123
     204:	f0 e0       	ldi	r31, 0x00	; 0
     206:	90 81       	ld	r25, Z
     208:	98 60       	ori	r25, 0x08	; 8
     20a:	90 83       	st	Z, r25
     20c:	ec e7       	ldi	r30, 0x7C	; 124
     20e:	f0 e0       	ldi	r31, 0x00	; 0
     210:	80 83       	st	Z, r24
     212:	80 81       	ld	r24, Z
     214:	87 70       	andi	r24, 0x07	; 7
     216:	80 83       	st	Z, r24
     218:	08 95       	ret

0000021a <start_adc>:
     21a:	ea e7       	ldi	r30, 0x7A	; 122
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	80 81       	ld	r24, Z
     220:	80 64       	ori	r24, 0x40	; 64
     222:	80 83       	st	Z, r24
     224:	08 95       	ret

00000226 <__vector_21>:
}


// read the ADC data after the conversion is complete
ISR( ADC_vect ){
     226:	1f 92       	push	r1
     228:	0f 92       	push	r0
     22a:	0f b6       	in	r0, 0x3f	; 63
     22c:	0f 92       	push	r0
     22e:	11 24       	eor	r1, r1
     230:	2f 93       	push	r18
     232:	8f 93       	push	r24
     234:	9f 93       	push	r25
					  
						
						  adc_10bit_data |= ADCH_reg;
     236:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
						  adc_10bit_data = (adc_10bit_data<<8);
     23a:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
     23e:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
     242:	82 2b       	or	r24, r18
     244:	98 2f       	mov	r25, r24
     246:	88 27       	eor	r24, r24
     248:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
     24c:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
						  adc_10bit_data |= ADCL_reg;					 
     250:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     254:	82 2b       	or	r24, r18
     256:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
     25a:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
}
     25e:	9f 91       	pop	r25
     260:	8f 91       	pop	r24
     262:	2f 91       	pop	r18
     264:	0f 90       	pop	r0
     266:	0f be       	out	0x3f, r0	; 63
     268:	0f 90       	pop	r0
     26a:	1f 90       	pop	r1
     26c:	18 95       	reti

0000026e <convert_analog_channel_data>:
 */
void convert_analog_channel_data( unsigned char sensor_channel_number ){
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function
	
	select_adc_channel( sensor_channel_number );
     26e:	b7 df       	rcall	.-146    	; 0x1de <select_adc_channel>
	
	start_adc();
     270:	d4 cf       	rjmp	.-88     	; 0x21a <start_adc>
     272:	08 95       	ret

00000274 <main>:
     274:	cf 93       	push	r28
/**
 * @brief      Main Function
 *
 * @details    First Initializes the 2nd Sharp sensor and sends its ADC converted data on LCD and UART
 */
int main(void) {
     276:	df 93       	push	r29
     278:	cd b7       	in	r28, 0x3d	; 61
     27a:	de b7       	in	r29, 0x3e	; 62
     27c:	c4 56       	subi	r28, 0x64	; 100
     27e:	d1 09       	sbc	r29, r1
     280:	0f b6       	in	r0, 0x3f	; 63
     282:	f8 94       	cli
     284:	de bf       	out	0x3e, r29	; 62
     286:	0f be       	out	0x3f, r0	; 63
     288:	cd bf       	out	0x3d, r28	; 61
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function except a part of while loop
	
	sharp_sensor_pin_config();			// Initialize the 2nd Sharp sensor
     28a:	8c df       	rcall	.-232    	; 0x1a4 <sharp_sensor_pin_config>
	
	adc_init();							// Initialize the ADC
     28c:	8e df       	rcall	.-228    	; 0x1aa <adc_init>
	
	lcd_port_config();					// Initialize the LCD port
     28e:	6a d0       	rcall	.+212    	; 0x364 <lcd_port_config>
     290:	e2 d0       	rcall	.+452    	; 0x456 <lcd_init>
	lcd_init();							// Initialize the LCD
     292:	87 e6       	ldi	r24, 0x67	; 103
	
	uart_init(UBRR_VALUE);				// Initialize the UART
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	50 d1       	rcall	.+672    	; 0x538 <uart_init>
     298:	80 e0       	ldi	r24, 0x00	; 0
	float adc_data_voltage_reading ;
	
	// To create string for transmitting 2nd Sharp sensor raw data and corresponding voltage over the UART and LCD
	char tx_raw_adc_data_buffer[25], tx_voltage_buffer[25], lcd_print_raw_adc_data_string[25], lcd_print_voltage_string[25];
	
	convert_analog_channel_data( sharp_sensor_channel );
     29a:	e9 df       	rcall	.-46     	; 0x26e <convert_analog_channel_data>
     29c:	0a e7       	ldi	r16, 0x7A	; 122
     29e:	10 e0       	ldi	r17, 0x00	; 0
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
     2a0:	4e 01       	movw	r8, r28
     2a2:	23 e3       	ldi	r18, 0x33	; 51

			adc_data_voltage_reading = ADC_TO_VOLT*sharp_sensor_data ;

			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
     2a4:	82 0e       	add	r8, r18
     2a6:	91 1c       	adc	r9, r1
     2a8:	ce 01       	movw	r24, r28
     2aa:	01 96       	adiw	r24, 0x01	; 1
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
     2ac:	3c 01       	movw	r6, r24
     2ae:	5e 01       	movw	r10, r28
     2b0:	9c e4       	ldi	r25, 0x4C	; 76
			uart_tx_string(tx_raw_adc_data_buffer);
			
			sprintf(lcd_print_voltage_string, "Voltage: %0.2f V", adc_data_voltage_reading);
     2b2:	a9 0e       	add	r10, r25
     2b4:	b1 1c       	adc	r11, r1
     2b6:	6e 01       	movw	r12, r28
     2b8:	ea e1       	ldi	r30, 0x1A	; 26
			lcd_string(2, 1, lcd_print_voltage_string);
			
			sprintf(tx_voltage_buffer, "Voltage: %0.2f V\n", adc_data_voltage_reading);
     2ba:	ce 0e       	add	r12, r30
     2bc:	d1 1c       	adc	r13, r1
     2be:	f8 01       	movw	r30, r16
     2c0:	80 81       	ld	r24, Z
	
	convert_analog_channel_data( sharp_sensor_channel );
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
     2c2:	86 fd       	sbrc	r24, 6
     2c4:	fc cf       	rjmp	.-8      	; 0x2be <main+0x4a>
     2c6:	e0 90 42 01 	lds	r14, 0x0142	; 0x800142 <__data_end>
		{
			// ------------------------------- //

			sharp_sensor_data = adc_10bit_data;
     2ca:	f0 90 43 01 	lds	r15, 0x0143	; 0x800143 <__data_end+0x1>
     2ce:	b7 01       	movw	r22, r14

			adc_data_voltage_reading = ADC_TO_VOLT*sharp_sensor_data ;
     2d0:	0f 2c       	mov	r0, r15
     2d2:	00 0c       	add	r0, r0
     2d4:	88 0b       	sbc	r24, r24
     2d6:	99 0b       	sbc	r25, r25
     2d8:	5d d1       	rcall	.+698    	; 0x594 <__floatsisf>
     2da:	2a e0       	ldi	r18, 0x0A	; 10
     2dc:	38 e2       	ldi	r19, 0x28	; 40
     2de:	40 ea       	ldi	r20, 0xA0	; 160
     2e0:	5b e3       	ldi	r21, 0x3B	; 59
     2e2:	93 d1       	rcall	.+806    	; 0x60a <__mulsf3>
     2e4:	56 2e       	mov	r5, r22
     2e6:	47 2e       	mov	r4, r23
     2e8:	38 2e       	mov	r3, r24
     2ea:	29 2e       	mov	r2, r25
     2ec:	ff 92       	push	r15
     2ee:	ef 92       	push	r14

			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	91 e0       	ldi	r25, 0x01	; 1
     2f4:	9f 93       	push	r25
     2f6:	8f 93       	push	r24
     2f8:	9f 92       	push	r9
     2fa:	8f 92       	push	r8
     2fc:	f9 d6       	rcall	.+3570   	; 0x10f0 <sprintf>
     2fe:	a4 01       	movw	r20, r8
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
     300:	61 e0       	ldi	r22, 0x01	; 1
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	fe d0       	rcall	.+508    	; 0x502 <lcd_string>
     306:	ff 92       	push	r15
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
     308:	ef 92       	push	r14
     30a:	8f e0       	ldi	r24, 0x0F	; 15
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	9f 93       	push	r25
     310:	8f 93       	push	r24
     312:	7f 92       	push	r7
     314:	6f 92       	push	r6
     316:	ec d6       	rcall	.+3544   	; 0x10f0 <sprintf>
     318:	c3 01       	movw	r24, r6
			uart_tx_string(tx_raw_adc_data_buffer);
     31a:	2c d1       	rcall	.+600    	; 0x574 <uart_tx_string>
     31c:	2f 92       	push	r2
			
			sprintf(lcd_print_voltage_string, "Voltage: %0.2f V", adc_data_voltage_reading);
     31e:	3f 92       	push	r3
     320:	4f 92       	push	r4
     322:	5f 92       	push	r5
     324:	8f e1       	ldi	r24, 0x1F	; 31
     326:	91 e0       	ldi	r25, 0x01	; 1
     328:	9f 93       	push	r25
     32a:	8f 93       	push	r24
     32c:	bf 92       	push	r11
     32e:	af 92       	push	r10
     330:	df d6       	rcall	.+3518   	; 0x10f0 <sprintf>
     332:	a5 01       	movw	r20, r10
			lcd_string(2, 1, lcd_print_voltage_string);
     334:	61 e0       	ldi	r22, 0x01	; 1
     336:	82 e0       	ldi	r24, 0x02	; 2
     338:	e4 d0       	rcall	.+456    	; 0x502 <lcd_string>
			
			sprintf(tx_voltage_buffer, "Voltage: %0.2f V\n", adc_data_voltage_reading);
     33a:	2f 92       	push	r2
     33c:	3f 92       	push	r3
     33e:	4f 92       	push	r4
     340:	5f 92       	push	r5
     342:	80 e3       	ldi	r24, 0x30	; 48
     344:	91 e0       	ldi	r25, 0x01	; 1
     346:	9f 93       	push	r25
     348:	8f 93       	push	r24
     34a:	df 92       	push	r13
     34c:	cf 92       	push	r12
     34e:	d0 d6       	rcall	.+3488   	; 0x10f0 <sprintf>
			uart_tx_string(tx_voltage_buffer);
     350:	c6 01       	movw	r24, r12
     352:	10 d1       	rcall	.+544    	; 0x574 <uart_tx_string>
     354:	80 e0       	ldi	r24, 0x00	; 0
			
			convert_analog_channel_data( sharp_sensor_channel );
     356:	8b df       	rcall	.-234    	; 0x26e <convert_analog_channel_data>
     358:	0f b6       	in	r0, 0x3f	; 63
     35a:	f8 94       	cli
     35c:	de bf       	out	0x3e, r29	; 62
     35e:	0f be       	out	0x3f, r0	; 63
     360:	cd bf       	out	0x3d, r28	; 61
     362:	ad cf       	rjmp	.-166    	; 0x2be <main+0x4a>

00000364 <lcd_port_config>:
     364:	84 b1       	in	r24, 0x04	; 4
     366:	87 60       	ori	r24, 0x07	; 7
 * Logic: This function clears LCD by giving specific command as input to lcd_wr_command() function
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
     368:	84 b9       	out	0x04, r24	; 4
     36a:	8a b1       	in	r24, 0x0a	; 10
     36c:	80 6f       	ori	r24, 0xF0	; 240
     36e:	8a b9       	out	0x0a, r24	; 10
     370:	85 b1       	in	r24, 0x05	; 5
     372:	88 7f       	andi	r24, 0xF8	; 248
     374:	85 b9       	out	0x05, r24	; 5
     376:	8b b1       	in	r24, 0x0b	; 11
     378:	8f 70       	andi	r24, 0x0F	; 15
     37a:	8b b9       	out	0x0b, r24	; 11
     37c:	08 95       	ret

0000037e <lcd_set_4bit>:
     37e:	8f e9       	ldi	r24, 0x9F	; 159
     380:	9f e0       	ldi	r25, 0x0F	; 15
     382:	01 97       	sbiw	r24, 0x01	; 1
     384:	f1 f7       	brne	.-4      	; 0x382 <lcd_set_4bit+0x4>
     386:	00 c0       	rjmp	.+0      	; 0x388 <lcd_set_4bit+0xa>
     388:	00 00       	nop
     38a:	28 98       	cbi	0x05, 0	; 5
     38c:	2a 98       	cbi	0x05, 2	; 5
     38e:	80 e3       	ldi	r24, 0x30	; 48
     390:	8b b9       	out	0x0b, r24	; 11
     392:	29 9a       	sbi	0x05, 1	; 5
     394:	ef e1       	ldi	r30, 0x1F	; 31
     396:	fe e4       	ldi	r31, 0x4E	; 78
     398:	31 97       	sbiw	r30, 0x01	; 1
     39a:	f1 f7       	brne	.-4      	; 0x398 <lcd_set_4bit+0x1a>
     39c:	00 c0       	rjmp	.+0      	; 0x39e <lcd_set_4bit+0x20>
     39e:	00 00       	nop
     3a0:	29 98       	cbi	0x05, 1	; 5
     3a2:	ef e9       	ldi	r30, 0x9F	; 159
     3a4:	ff e0       	ldi	r31, 0x0F	; 15
     3a6:	31 97       	sbiw	r30, 0x01	; 1
     3a8:	f1 f7       	brne	.-4      	; 0x3a6 <lcd_set_4bit+0x28>
     3aa:	00 c0       	rjmp	.+0      	; 0x3ac <lcd_set_4bit+0x2e>
     3ac:	00 00       	nop
     3ae:	28 98       	cbi	0x05, 0	; 5
     3b0:	2a 98       	cbi	0x05, 2	; 5
     3b2:	8b b9       	out	0x0b, r24	; 11
     3b4:	29 9a       	sbi	0x05, 1	; 5
     3b6:	ef e1       	ldi	r30, 0x1F	; 31
     3b8:	fe e4       	ldi	r31, 0x4E	; 78
     3ba:	31 97       	sbiw	r30, 0x01	; 1
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <lcd_set_4bit+0x3c>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <lcd_set_4bit+0x42>
     3c0:	00 00       	nop
     3c2:	29 98       	cbi	0x05, 1	; 5
     3c4:	ef e9       	ldi	r30, 0x9F	; 159
     3c6:	ff e0       	ldi	r31, 0x0F	; 15
     3c8:	31 97       	sbiw	r30, 0x01	; 1
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <lcd_set_4bit+0x4a>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <lcd_set_4bit+0x50>
     3ce:	00 00       	nop
     3d0:	28 98       	cbi	0x05, 0	; 5
     3d2:	2a 98       	cbi	0x05, 2	; 5
     3d4:	8b b9       	out	0x0b, r24	; 11
     3d6:	29 9a       	sbi	0x05, 1	; 5
     3d8:	8f e1       	ldi	r24, 0x1F	; 31
     3da:	9e e4       	ldi	r25, 0x4E	; 78
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	f1 f7       	brne	.-4      	; 0x3dc <lcd_set_4bit+0x5e>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <lcd_set_4bit+0x64>
     3e2:	00 00       	nop
     3e4:	29 98       	cbi	0x05, 1	; 5
     3e6:	ef e9       	ldi	r30, 0x9F	; 159
     3e8:	ff e0       	ldi	r31, 0x0F	; 15
     3ea:	31 97       	sbiw	r30, 0x01	; 1
     3ec:	f1 f7       	brne	.-4      	; 0x3ea <lcd_set_4bit+0x6c>
     3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <lcd_set_4bit+0x72>
     3f0:	00 00       	nop
     3f2:	28 98       	cbi	0x05, 0	; 5
     3f4:	2a 98       	cbi	0x05, 2	; 5
     3f6:	80 e2       	ldi	r24, 0x20	; 32
     3f8:	8b b9       	out	0x0b, r24	; 11
     3fa:	29 9a       	sbi	0x05, 1	; 5
     3fc:	8f e1       	ldi	r24, 0x1F	; 31
     3fe:	9e e4       	ldi	r25, 0x4E	; 78
     400:	01 97       	sbiw	r24, 0x01	; 1
     402:	f1 f7       	brne	.-4      	; 0x400 <__LOCK_REGION_LENGTH__>
     404:	00 c0       	rjmp	.+0      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     406:	00 00       	nop
     408:	29 98       	cbi	0x05, 1	; 5
     40a:	08 95       	ret

0000040c <lcd_wr_command>:
     40c:	9b b1       	in	r25, 0x0b	; 11
     40e:	9f 70       	andi	r25, 0x0F	; 15
     410:	9b b9       	out	0x0b, r25	; 11
     412:	9b b1       	in	r25, 0x0b	; 11
     414:	28 2f       	mov	r18, r24
     416:	20 7f       	andi	r18, 0xF0	; 240
     418:	92 2b       	or	r25, r18
     41a:	9b b9       	out	0x0b, r25	; 11
     41c:	28 98       	cbi	0x05, 0	; 5
     41e:	2a 98       	cbi	0x05, 2	; 5
     420:	29 9a       	sbi	0x05, 1	; 5
     422:	ef e1       	ldi	r30, 0x1F	; 31
     424:	fe e4       	ldi	r31, 0x4E	; 78
     426:	31 97       	sbiw	r30, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <lcd_wr_command+0x1a>
     42a:	00 c0       	rjmp	.+0      	; 0x42c <lcd_wr_command+0x20>
     42c:	00 00       	nop
     42e:	29 98       	cbi	0x05, 1	; 5
     430:	9b b1       	in	r25, 0x0b	; 11
     432:	9f 70       	andi	r25, 0x0F	; 15
     434:	9b b9       	out	0x0b, r25	; 11
     436:	9b b1       	in	r25, 0x0b	; 11
     438:	82 95       	swap	r24
     43a:	80 7f       	andi	r24, 0xF0	; 240
     43c:	89 2b       	or	r24, r25
     43e:	8b b9       	out	0x0b, r24	; 11
     440:	28 98       	cbi	0x05, 0	; 5
     442:	2a 98       	cbi	0x05, 2	; 5
     444:	29 9a       	sbi	0x05, 1	; 5
     446:	8f e1       	ldi	r24, 0x1F	; 31
     448:	9e e4       	ldi	r25, 0x4E	; 78
     44a:	01 97       	sbiw	r24, 0x01	; 1
     44c:	f1 f7       	brne	.-4      	; 0x44a <lcd_wr_command+0x3e>
     44e:	00 c0       	rjmp	.+0      	; 0x450 <lcd_wr_command+0x44>
     450:	00 00       	nop
     452:	29 98       	cbi	0x05, 1	; 5
     454:	08 95       	ret

00000456 <lcd_init>:
     456:	93 df       	rcall	.-218    	; 0x37e <lcd_set_4bit>
     458:	8f e9       	ldi	r24, 0x9F	; 159
     45a:	9f e0       	ldi	r25, 0x0F	; 15
     45c:	01 97       	sbiw	r24, 0x01	; 1
     45e:	f1 f7       	brne	.-4      	; 0x45c <lcd_init+0x6>
     460:	00 c0       	rjmp	.+0      	; 0x462 <lcd_init+0xc>
     462:	00 00       	nop
     464:	88 e2       	ldi	r24, 0x28	; 40
     466:	d2 df       	rcall	.-92     	; 0x40c <lcd_wr_command>
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	d0 df       	rcall	.-96     	; 0x40c <lcd_wr_command>
     46c:	86 e0       	ldi	r24, 0x06	; 6
     46e:	ce df       	rcall	.-100    	; 0x40c <lcd_wr_command>
     470:	8e e0       	ldi	r24, 0x0E	; 14
     472:	cc df       	rcall	.-104    	; 0x40c <lcd_wr_command>
     474:	80 e8       	ldi	r24, 0x80	; 128
     476:	ca cf       	rjmp	.-108    	; 0x40c <lcd_wr_command>
     478:	08 95       	ret

0000047a <lcd_cursor>:
     47a:	82 30       	cpi	r24, 0x02	; 2
     47c:	69 f0       	breq	.+26     	; 0x498 <lcd_cursor+0x1e>
     47e:	18 f4       	brcc	.+6      	; 0x486 <lcd_cursor+0xc>
     480:	81 30       	cpi	r24, 0x01	; 1
     482:	31 f0       	breq	.+12     	; 0x490 <lcd_cursor+0x16>
     484:	08 95       	ret
     486:	83 30       	cpi	r24, 0x03	; 3
     488:	59 f0       	breq	.+22     	; 0x4a0 <lcd_cursor+0x26>
     48a:	84 30       	cpi	r24, 0x04	; 4
     48c:	69 f0       	breq	.+26     	; 0x4a8 <lcd_cursor+0x2e>
     48e:	08 95       	ret
     490:	8f e7       	ldi	r24, 0x7F	; 127
     492:	86 0f       	add	r24, r22
     494:	bb cf       	rjmp	.-138    	; 0x40c <lcd_wr_command>
     496:	08 95       	ret
     498:	8f eb       	ldi	r24, 0xBF	; 191
     49a:	86 0f       	add	r24, r22
     49c:	b7 cf       	rjmp	.-146    	; 0x40c <lcd_wr_command>
     49e:	08 95       	ret
     4a0:	83 e9       	ldi	r24, 0x93	; 147
     4a2:	86 0f       	add	r24, r22
     4a4:	b3 cf       	rjmp	.-154    	; 0x40c <lcd_wr_command>
     4a6:	08 95       	ret
     4a8:	83 ed       	ldi	r24, 0xD3	; 211
     4aa:	86 0f       	add	r24, r22
     4ac:	af cf       	rjmp	.-162    	; 0x40c <lcd_wr_command>
     4ae:	08 95       	ret

000004b0 <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
     4b0:	cf 93       	push	r28
     4b2:	c4 2f       	mov	r28, r20
	lcd_cursor (row, column);
     4b4:	e2 df       	rcall	.-60     	; 0x47a <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
	temp = (temp & 0xF0);
	lcd_data_port_reg &= 0x0F;
     4b6:	8b b1       	in	r24, 0x0b	; 11
     4b8:	8f 70       	andi	r24, 0x0F	; 15
     4ba:	8b b9       	out	0x0b, r24	; 11
	lcd_data_port_reg |= temp;
     4bc:	8b b1       	in	r24, 0x0b	; 11
     4be:	9c 2f       	mov	r25, r28
     4c0:	90 7f       	andi	r25, 0xF0	; 240
     4c2:	89 2b       	or	r24, r25
     4c4:	8b b9       	out	0x0b, r24	; 11
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
     4c6:	28 9a       	sbi	0x05, 0	; 5
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
     4c8:	2a 98       	cbi	0x05, 2	; 5
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
     4ca:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4cc:	8f e1       	ldi	r24, 0x1F	; 31
     4ce:	9e e4       	ldi	r25, 0x4E	; 78
     4d0:	01 97       	sbiw	r24, 0x01	; 1
     4d2:	f1 f7       	brne	.-4      	; 0x4d0 <lcd_wr_char+0x20>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <lcd_wr_char+0x26>
     4d6:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
     4d8:	29 98       	cbi	0x05, 1	; 5
	
	alpha_num_char = (alpha_num_char & 0x0F);
	alpha_num_char = (alpha_num_char << 4);
	lcd_data_port_reg &= 0x0F;
     4da:	8b b1       	in	r24, 0x0b	; 11
     4dc:	8f 70       	andi	r24, 0x0F	; 15
     4de:	8b b9       	out	0x0b, r24	; 11
	lcd_data_port_reg |= alpha_num_char;
     4e0:	8b b1       	in	r24, 0x0b	; 11
     4e2:	c2 95       	swap	r28
     4e4:	c0 7f       	andi	r28, 0xF0	; 240
     4e6:	c8 2b       	or	r28, r24
     4e8:	cb b9       	out	0x0b, r28	; 11
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
     4ea:	28 9a       	sbi	0x05, 0	; 5
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
     4ec:	2a 98       	cbi	0x05, 2	; 5
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
     4ee:	29 9a       	sbi	0x05, 1	; 5
     4f0:	8f e1       	ldi	r24, 0x1F	; 31
     4f2:	9e e4       	ldi	r25, 0x4E	; 78
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	f1 f7       	brne	.-4      	; 0x4f4 <lcd_wr_char+0x44>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <lcd_wr_char+0x4a>
     4fa:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
     4fc:	29 98       	cbi	0x05, 1	; 5
}
     4fe:	cf 91       	pop	r28
     500:	08 95       	ret

00000502 <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
     502:	0f 93       	push	r16
     504:	1f 93       	push	r17
     506:	cf 93       	push	r28
     508:	df 93       	push	r29
     50a:	d8 2f       	mov	r29, r24
     50c:	c6 2f       	mov	r28, r22
     50e:	fa 01       	movw	r30, r20
	while(*str != '\0')
     510:	40 81       	ld	r20, Z
     512:	44 23       	and	r20, r20
     514:	61 f0       	breq	.+24     	; 0x52e <lcd_string+0x2c>
     516:	8f 01       	movw	r16, r30
     518:	0f 5f       	subi	r16, 0xFF	; 255
     51a:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_wr_char(row, column, *str);
     51c:	6c 2f       	mov	r22, r28
     51e:	8d 2f       	mov	r24, r29
     520:	c7 df       	rcall	.-114    	; 0x4b0 <lcd_wr_char>
		str++;
		column+=1;
     522:	cf 5f       	subi	r28, 0xFF	; 255
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
     524:	f8 01       	movw	r30, r16
     526:	41 91       	ld	r20, Z+
     528:	8f 01       	movw	r16, r30
     52a:	41 11       	cpse	r20, r1
     52c:	f7 cf       	rjmp	.-18     	; 0x51c <lcd_string+0x1a>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	1f 91       	pop	r17
     534:	0f 91       	pop	r16
     536:	08 95       	ret

00000538 <uart_init>:
 * Example Call: uart_init();
 */
void uart_init (unsigned int ubbr_value)
{
	// In UCSRB_reg, disable all bits setting the Baud Rate
	UCSRB_reg	= 0x00;
     538:	e1 ec       	ldi	r30, 0xC1	; 193
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	10 82       	st	Z, r1
	
	// In UBRRH_reg and UBRRL_reg, set the baud rate
	UBRRH_reg	= (unsigned char) ( ubbr_value >> 8 );
     53e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRRL_reg	= (unsigned char) ( ubbr_value );
     542:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	// In UCSRC_reg, select the Asynchronous USART mode and the character size to 8 bits
	UCSRC_reg	&= ~( ( 1 << UMSEL1_bit ) | ( 1 << UMSEL0_bit ) );
     546:	a2 ec       	ldi	r26, 0xC2	; 194
     548:	b0 e0       	ldi	r27, 0x00	; 0
     54a:	8c 91       	ld	r24, X
     54c:	8f 73       	andi	r24, 0x3F	; 63
     54e:	8c 93       	st	X, r24
	UCSRC_reg	|= ( ( 1 << UCSZ1_bit ) | ( 1 << UCSZ0_bit ) );
     550:	8c 91       	ld	r24, X
     552:	86 60       	ori	r24, 0x06	; 6
     554:	8c 93       	st	X, r24
	
	// In UCSRB_reg, enable the receiver and transmitter
	UCSRB_reg	|= ( ( 1 << TXEN_bit ) | ( 1 << RXEN_bit ) );
     556:	80 81       	ld	r24, Z
     558:	88 61       	ori	r24, 0x18	; 24
     55a:	80 83       	st	Z, r24
	UCSRB_reg	&= ~( 1 << UCSZ2_bit );
     55c:	80 81       	ld	r24, Z
     55e:	8b 7f       	andi	r24, 0xFB	; 251
     560:	80 83       	st	Z, r24
     562:	08 95       	ret

00000564 <uart_tx>:
 * Logic: This function sends a character over the UART
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
     564:	e0 ec       	ldi	r30, 0xC0	; 192
     566:	f0 e0       	ldi	r31, 0x00	; 0
     568:	90 81       	ld	r25, Z
     56a:	95 ff       	sbrs	r25, 5
     56c:	fd cf       	rjmp	.-6      	; 0x568 <uart_tx+0x4>
	UDR_reg	= data;
     56e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     572:	08 95       	ret

00000574 <uart_tx_string>:
 * Output: None
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
     574:	cf 93       	push	r28
     576:	df 93       	push	r29
     578:	ec 01       	movw	r28, r24
	while(*data != '\0')
     57a:	88 81       	ld	r24, Y
     57c:	88 23       	and	r24, r24
     57e:	29 f0       	breq	.+10     	; 0x58a <uart_tx_string+0x16>
     580:	21 96       	adiw	r28, 0x01	; 1
	{
		uart_tx(*data);
     582:	f0 df       	rcall	.-32     	; 0x564 <uart_tx>
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
	while(*data != '\0')
     584:	89 91       	ld	r24, Y+
     586:	81 11       	cpse	r24, r1
     588:	fc cf       	rjmp	.-8      	; 0x582 <uart_tx_string+0xe>
	{
		uart_tx(*data);
		data++;
	}
}
     58a:	df 91       	pop	r29
     58c:	cf 91       	pop	r28
     58e:	08 95       	ret

00000590 <__floatunsisf>:
     590:	e8 94       	clt
     592:	09 c0       	rjmp	.+18     	; 0x5a6 <__floatsisf+0x12>

00000594 <__floatsisf>:
     594:	97 fb       	bst	r25, 7
     596:	3e f4       	brtc	.+14     	; 0x5a6 <__floatsisf+0x12>
     598:	90 95       	com	r25
     59a:	80 95       	com	r24
     59c:	70 95       	com	r23
     59e:	61 95       	neg	r22
     5a0:	7f 4f       	sbci	r23, 0xFF	; 255
     5a2:	8f 4f       	sbci	r24, 0xFF	; 255
     5a4:	9f 4f       	sbci	r25, 0xFF	; 255
     5a6:	99 23       	and	r25, r25
     5a8:	a9 f0       	breq	.+42     	; 0x5d4 <__floatsisf+0x40>
     5aa:	f9 2f       	mov	r31, r25
     5ac:	96 e9       	ldi	r25, 0x96	; 150
     5ae:	bb 27       	eor	r27, r27
     5b0:	93 95       	inc	r25
     5b2:	f6 95       	lsr	r31
     5b4:	87 95       	ror	r24
     5b6:	77 95       	ror	r23
     5b8:	67 95       	ror	r22
     5ba:	b7 95       	ror	r27
     5bc:	f1 11       	cpse	r31, r1
     5be:	f8 cf       	rjmp	.-16     	; 0x5b0 <__floatsisf+0x1c>
     5c0:	fa f4       	brpl	.+62     	; 0x600 <__floatsisf+0x6c>
     5c2:	bb 0f       	add	r27, r27
     5c4:	11 f4       	brne	.+4      	; 0x5ca <__floatsisf+0x36>
     5c6:	60 ff       	sbrs	r22, 0
     5c8:	1b c0       	rjmp	.+54     	; 0x600 <__floatsisf+0x6c>
     5ca:	6f 5f       	subi	r22, 0xFF	; 255
     5cc:	7f 4f       	sbci	r23, 0xFF	; 255
     5ce:	8f 4f       	sbci	r24, 0xFF	; 255
     5d0:	9f 4f       	sbci	r25, 0xFF	; 255
     5d2:	16 c0       	rjmp	.+44     	; 0x600 <__floatsisf+0x6c>
     5d4:	88 23       	and	r24, r24
     5d6:	11 f0       	breq	.+4      	; 0x5dc <__floatsisf+0x48>
     5d8:	96 e9       	ldi	r25, 0x96	; 150
     5da:	11 c0       	rjmp	.+34     	; 0x5fe <__floatsisf+0x6a>
     5dc:	77 23       	and	r23, r23
     5de:	21 f0       	breq	.+8      	; 0x5e8 <__floatsisf+0x54>
     5e0:	9e e8       	ldi	r25, 0x8E	; 142
     5e2:	87 2f       	mov	r24, r23
     5e4:	76 2f       	mov	r23, r22
     5e6:	05 c0       	rjmp	.+10     	; 0x5f2 <__floatsisf+0x5e>
     5e8:	66 23       	and	r22, r22
     5ea:	71 f0       	breq	.+28     	; 0x608 <__floatsisf+0x74>
     5ec:	96 e8       	ldi	r25, 0x86	; 134
     5ee:	86 2f       	mov	r24, r22
     5f0:	70 e0       	ldi	r23, 0x00	; 0
     5f2:	60 e0       	ldi	r22, 0x00	; 0
     5f4:	2a f0       	brmi	.+10     	; 0x600 <__floatsisf+0x6c>
     5f6:	9a 95       	dec	r25
     5f8:	66 0f       	add	r22, r22
     5fa:	77 1f       	adc	r23, r23
     5fc:	88 1f       	adc	r24, r24
     5fe:	da f7       	brpl	.-10     	; 0x5f6 <__floatsisf+0x62>
     600:	88 0f       	add	r24, r24
     602:	96 95       	lsr	r25
     604:	87 95       	ror	r24
     606:	97 f9       	bld	r25, 7
     608:	08 95       	ret

0000060a <__mulsf3>:
     60a:	0b d0       	rcall	.+22     	; 0x622 <__mulsf3x>
     60c:	78 c0       	rjmp	.+240    	; 0x6fe <__fp_round>
     60e:	69 d0       	rcall	.+210    	; 0x6e2 <__fp_pscA>
     610:	28 f0       	brcs	.+10     	; 0x61c <__mulsf3+0x12>
     612:	6e d0       	rcall	.+220    	; 0x6f0 <__fp_pscB>
     614:	18 f0       	brcs	.+6      	; 0x61c <__mulsf3+0x12>
     616:	95 23       	and	r25, r21
     618:	09 f0       	breq	.+2      	; 0x61c <__mulsf3+0x12>
     61a:	5a c0       	rjmp	.+180    	; 0x6d0 <__fp_inf>
     61c:	5f c0       	rjmp	.+190    	; 0x6dc <__fp_nan>
     61e:	11 24       	eor	r1, r1
     620:	a2 c0       	rjmp	.+324    	; 0x766 <__fp_szero>

00000622 <__mulsf3x>:
     622:	7e d0       	rcall	.+252    	; 0x720 <__fp_split3>
     624:	a0 f3       	brcs	.-24     	; 0x60e <__mulsf3+0x4>

00000626 <__mulsf3_pse>:
     626:	95 9f       	mul	r25, r21
     628:	d1 f3       	breq	.-12     	; 0x61e <__mulsf3+0x14>
     62a:	95 0f       	add	r25, r21
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	55 1f       	adc	r21, r21
     630:	62 9f       	mul	r22, r18
     632:	f0 01       	movw	r30, r0
     634:	72 9f       	mul	r23, r18
     636:	bb 27       	eor	r27, r27
     638:	f0 0d       	add	r31, r0
     63a:	b1 1d       	adc	r27, r1
     63c:	63 9f       	mul	r22, r19
     63e:	aa 27       	eor	r26, r26
     640:	f0 0d       	add	r31, r0
     642:	b1 1d       	adc	r27, r1
     644:	aa 1f       	adc	r26, r26
     646:	64 9f       	mul	r22, r20
     648:	66 27       	eor	r22, r22
     64a:	b0 0d       	add	r27, r0
     64c:	a1 1d       	adc	r26, r1
     64e:	66 1f       	adc	r22, r22
     650:	82 9f       	mul	r24, r18
     652:	22 27       	eor	r18, r18
     654:	b0 0d       	add	r27, r0
     656:	a1 1d       	adc	r26, r1
     658:	62 1f       	adc	r22, r18
     65a:	73 9f       	mul	r23, r19
     65c:	b0 0d       	add	r27, r0
     65e:	a1 1d       	adc	r26, r1
     660:	62 1f       	adc	r22, r18
     662:	83 9f       	mul	r24, r19
     664:	a0 0d       	add	r26, r0
     666:	61 1d       	adc	r22, r1
     668:	22 1f       	adc	r18, r18
     66a:	74 9f       	mul	r23, r20
     66c:	33 27       	eor	r19, r19
     66e:	a0 0d       	add	r26, r0
     670:	61 1d       	adc	r22, r1
     672:	23 1f       	adc	r18, r19
     674:	84 9f       	mul	r24, r20
     676:	60 0d       	add	r22, r0
     678:	21 1d       	adc	r18, r1
     67a:	82 2f       	mov	r24, r18
     67c:	76 2f       	mov	r23, r22
     67e:	6a 2f       	mov	r22, r26
     680:	11 24       	eor	r1, r1
     682:	9f 57       	subi	r25, 0x7F	; 127
     684:	50 40       	sbci	r21, 0x00	; 0
     686:	8a f0       	brmi	.+34     	; 0x6aa <__mulsf3_pse+0x84>
     688:	e1 f0       	breq	.+56     	; 0x6c2 <__mulsf3_pse+0x9c>
     68a:	88 23       	and	r24, r24
     68c:	4a f0       	brmi	.+18     	; 0x6a0 <__mulsf3_pse+0x7a>
     68e:	ee 0f       	add	r30, r30
     690:	ff 1f       	adc	r31, r31
     692:	bb 1f       	adc	r27, r27
     694:	66 1f       	adc	r22, r22
     696:	77 1f       	adc	r23, r23
     698:	88 1f       	adc	r24, r24
     69a:	91 50       	subi	r25, 0x01	; 1
     69c:	50 40       	sbci	r21, 0x00	; 0
     69e:	a9 f7       	brne	.-22     	; 0x68a <__mulsf3_pse+0x64>
     6a0:	9e 3f       	cpi	r25, 0xFE	; 254
     6a2:	51 05       	cpc	r21, r1
     6a4:	70 f0       	brcs	.+28     	; 0x6c2 <__mulsf3_pse+0x9c>
     6a6:	14 c0       	rjmp	.+40     	; 0x6d0 <__fp_inf>
     6a8:	5e c0       	rjmp	.+188    	; 0x766 <__fp_szero>
     6aa:	5f 3f       	cpi	r21, 0xFF	; 255
     6ac:	ec f3       	brlt	.-6      	; 0x6a8 <__mulsf3_pse+0x82>
     6ae:	98 3e       	cpi	r25, 0xE8	; 232
     6b0:	dc f3       	brlt	.-10     	; 0x6a8 <__mulsf3_pse+0x82>
     6b2:	86 95       	lsr	r24
     6b4:	77 95       	ror	r23
     6b6:	67 95       	ror	r22
     6b8:	b7 95       	ror	r27
     6ba:	f7 95       	ror	r31
     6bc:	e7 95       	ror	r30
     6be:	9f 5f       	subi	r25, 0xFF	; 255
     6c0:	c1 f7       	brne	.-16     	; 0x6b2 <__mulsf3_pse+0x8c>
     6c2:	fe 2b       	or	r31, r30
     6c4:	88 0f       	add	r24, r24
     6c6:	91 1d       	adc	r25, r1
     6c8:	96 95       	lsr	r25
     6ca:	87 95       	ror	r24
     6cc:	97 f9       	bld	r25, 7
     6ce:	08 95       	ret

000006d0 <__fp_inf>:
     6d0:	97 f9       	bld	r25, 7
     6d2:	9f 67       	ori	r25, 0x7F	; 127
     6d4:	80 e8       	ldi	r24, 0x80	; 128
     6d6:	70 e0       	ldi	r23, 0x00	; 0
     6d8:	60 e0       	ldi	r22, 0x00	; 0
     6da:	08 95       	ret

000006dc <__fp_nan>:
     6dc:	9f ef       	ldi	r25, 0xFF	; 255
     6de:	80 ec       	ldi	r24, 0xC0	; 192
     6e0:	08 95       	ret

000006e2 <__fp_pscA>:
     6e2:	00 24       	eor	r0, r0
     6e4:	0a 94       	dec	r0
     6e6:	16 16       	cp	r1, r22
     6e8:	17 06       	cpc	r1, r23
     6ea:	18 06       	cpc	r1, r24
     6ec:	09 06       	cpc	r0, r25
     6ee:	08 95       	ret

000006f0 <__fp_pscB>:
     6f0:	00 24       	eor	r0, r0
     6f2:	0a 94       	dec	r0
     6f4:	12 16       	cp	r1, r18
     6f6:	13 06       	cpc	r1, r19
     6f8:	14 06       	cpc	r1, r20
     6fa:	05 06       	cpc	r0, r21
     6fc:	08 95       	ret

000006fe <__fp_round>:
     6fe:	09 2e       	mov	r0, r25
     700:	03 94       	inc	r0
     702:	00 0c       	add	r0, r0
     704:	11 f4       	brne	.+4      	; 0x70a <__fp_round+0xc>
     706:	88 23       	and	r24, r24
     708:	52 f0       	brmi	.+20     	; 0x71e <__fp_round+0x20>
     70a:	bb 0f       	add	r27, r27
     70c:	40 f4       	brcc	.+16     	; 0x71e <__fp_round+0x20>
     70e:	bf 2b       	or	r27, r31
     710:	11 f4       	brne	.+4      	; 0x716 <__fp_round+0x18>
     712:	60 ff       	sbrs	r22, 0
     714:	04 c0       	rjmp	.+8      	; 0x71e <__fp_round+0x20>
     716:	6f 5f       	subi	r22, 0xFF	; 255
     718:	7f 4f       	sbci	r23, 0xFF	; 255
     71a:	8f 4f       	sbci	r24, 0xFF	; 255
     71c:	9f 4f       	sbci	r25, 0xFF	; 255
     71e:	08 95       	ret

00000720 <__fp_split3>:
     720:	57 fd       	sbrc	r21, 7
     722:	90 58       	subi	r25, 0x80	; 128
     724:	44 0f       	add	r20, r20
     726:	55 1f       	adc	r21, r21
     728:	59 f0       	breq	.+22     	; 0x740 <__fp_splitA+0x10>
     72a:	5f 3f       	cpi	r21, 0xFF	; 255
     72c:	71 f0       	breq	.+28     	; 0x74a <__fp_splitA+0x1a>
     72e:	47 95       	ror	r20

00000730 <__fp_splitA>:
     730:	88 0f       	add	r24, r24
     732:	97 fb       	bst	r25, 7
     734:	99 1f       	adc	r25, r25
     736:	61 f0       	breq	.+24     	; 0x750 <__fp_splitA+0x20>
     738:	9f 3f       	cpi	r25, 0xFF	; 255
     73a:	79 f0       	breq	.+30     	; 0x75a <__fp_splitA+0x2a>
     73c:	87 95       	ror	r24
     73e:	08 95       	ret
     740:	12 16       	cp	r1, r18
     742:	13 06       	cpc	r1, r19
     744:	14 06       	cpc	r1, r20
     746:	55 1f       	adc	r21, r21
     748:	f2 cf       	rjmp	.-28     	; 0x72e <__fp_split3+0xe>
     74a:	46 95       	lsr	r20
     74c:	f1 df       	rcall	.-30     	; 0x730 <__fp_splitA>
     74e:	08 c0       	rjmp	.+16     	; 0x760 <__fp_splitA+0x30>
     750:	16 16       	cp	r1, r22
     752:	17 06       	cpc	r1, r23
     754:	18 06       	cpc	r1, r24
     756:	99 1f       	adc	r25, r25
     758:	f1 cf       	rjmp	.-30     	; 0x73c <__fp_splitA+0xc>
     75a:	86 95       	lsr	r24
     75c:	71 05       	cpc	r23, r1
     75e:	61 05       	cpc	r22, r1
     760:	08 94       	sec
     762:	08 95       	ret

00000764 <__fp_zero>:
     764:	e8 94       	clt

00000766 <__fp_szero>:
     766:	bb 27       	eor	r27, r27
     768:	66 27       	eor	r22, r22
     76a:	77 27       	eor	r23, r23
     76c:	cb 01       	movw	r24, r22
     76e:	97 f9       	bld	r25, 7
     770:	08 95       	ret

00000772 <vfprintf>:
     772:	a0 e1       	ldi	r26, 0x10	; 16
     774:	b0 e0       	ldi	r27, 0x00	; 0
     776:	ee eb       	ldi	r30, 0xBE	; 190
     778:	f3 e0       	ldi	r31, 0x03	; 3
     77a:	59 c3       	rjmp	.+1714   	; 0xe2e <__prologue_saves__>
     77c:	7c 01       	movw	r14, r24
     77e:	1b 01       	movw	r2, r22
     780:	6a 01       	movw	r12, r20
     782:	fc 01       	movw	r30, r24
     784:	17 82       	std	Z+7, r1	; 0x07
     786:	16 82       	std	Z+6, r1	; 0x06
     788:	83 81       	ldd	r24, Z+3	; 0x03
     78a:	81 ff       	sbrs	r24, 1
     78c:	2a c3       	rjmp	.+1620   	; 0xde2 <__stack+0x4e3>
     78e:	9e 01       	movw	r18, r28
     790:	2f 5f       	subi	r18, 0xFF	; 255
     792:	3f 4f       	sbci	r19, 0xFF	; 255
     794:	39 01       	movw	r6, r18
     796:	f7 01       	movw	r30, r14
     798:	93 81       	ldd	r25, Z+3	; 0x03
     79a:	f1 01       	movw	r30, r2
     79c:	93 fd       	sbrc	r25, 3
     79e:	85 91       	lpm	r24, Z+
     7a0:	93 ff       	sbrs	r25, 3
     7a2:	81 91       	ld	r24, Z+
     7a4:	1f 01       	movw	r2, r30
     7a6:	88 23       	and	r24, r24
     7a8:	09 f4       	brne	.+2      	; 0x7ac <vfprintf+0x3a>
     7aa:	17 c3       	rjmp	.+1582   	; 0xdda <__stack+0x4db>
     7ac:	85 32       	cpi	r24, 0x25	; 37
     7ae:	39 f4       	brne	.+14     	; 0x7be <vfprintf+0x4c>
     7b0:	93 fd       	sbrc	r25, 3
     7b2:	85 91       	lpm	r24, Z+
     7b4:	93 ff       	sbrs	r25, 3
     7b6:	81 91       	ld	r24, Z+
     7b8:	1f 01       	movw	r2, r30
     7ba:	85 32       	cpi	r24, 0x25	; 37
     7bc:	31 f4       	brne	.+12     	; 0x7ca <vfprintf+0x58>
     7be:	b7 01       	movw	r22, r14
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	5a d4       	rcall	.+2228   	; 0x1078 <fputc>
     7c4:	56 01       	movw	r10, r12
     7c6:	65 01       	movw	r12, r10
     7c8:	e6 cf       	rjmp	.-52     	; 0x796 <vfprintf+0x24>
     7ca:	10 e0       	ldi	r17, 0x00	; 0
     7cc:	51 2c       	mov	r5, r1
     7ce:	91 2c       	mov	r9, r1
     7d0:	ff e1       	ldi	r31, 0x1F	; 31
     7d2:	f9 15       	cp	r31, r9
     7d4:	d8 f0       	brcs	.+54     	; 0x80c <vfprintf+0x9a>
     7d6:	8b 32       	cpi	r24, 0x2B	; 43
     7d8:	79 f0       	breq	.+30     	; 0x7f8 <vfprintf+0x86>
     7da:	38 f4       	brcc	.+14     	; 0x7ea <vfprintf+0x78>
     7dc:	80 32       	cpi	r24, 0x20	; 32
     7de:	79 f0       	breq	.+30     	; 0x7fe <vfprintf+0x8c>
     7e0:	83 32       	cpi	r24, 0x23	; 35
     7e2:	a1 f4       	brne	.+40     	; 0x80c <vfprintf+0x9a>
     7e4:	f9 2d       	mov	r31, r9
     7e6:	f0 61       	ori	r31, 0x10	; 16
     7e8:	2e c0       	rjmp	.+92     	; 0x846 <vfprintf+0xd4>
     7ea:	8d 32       	cpi	r24, 0x2D	; 45
     7ec:	61 f0       	breq	.+24     	; 0x806 <vfprintf+0x94>
     7ee:	80 33       	cpi	r24, 0x30	; 48
     7f0:	69 f4       	brne	.+26     	; 0x80c <vfprintf+0x9a>
     7f2:	29 2d       	mov	r18, r9
     7f4:	21 60       	ori	r18, 0x01	; 1
     7f6:	2d c0       	rjmp	.+90     	; 0x852 <vfprintf+0xe0>
     7f8:	39 2d       	mov	r19, r9
     7fa:	32 60       	ori	r19, 0x02	; 2
     7fc:	93 2e       	mov	r9, r19
     7fe:	89 2d       	mov	r24, r9
     800:	84 60       	ori	r24, 0x04	; 4
     802:	98 2e       	mov	r9, r24
     804:	2a c0       	rjmp	.+84     	; 0x85a <vfprintf+0xe8>
     806:	e9 2d       	mov	r30, r9
     808:	e8 60       	ori	r30, 0x08	; 8
     80a:	15 c0       	rjmp	.+42     	; 0x836 <vfprintf+0xc4>
     80c:	97 fc       	sbrc	r9, 7
     80e:	2d c0       	rjmp	.+90     	; 0x86a <vfprintf+0xf8>
     810:	20 ed       	ldi	r18, 0xD0	; 208
     812:	28 0f       	add	r18, r24
     814:	2a 30       	cpi	r18, 0x0A	; 10
     816:	88 f4       	brcc	.+34     	; 0x83a <vfprintf+0xc8>
     818:	96 fe       	sbrs	r9, 6
     81a:	06 c0       	rjmp	.+12     	; 0x828 <vfprintf+0xb6>
     81c:	3a e0       	ldi	r19, 0x0A	; 10
     81e:	13 9f       	mul	r17, r19
     820:	20 0d       	add	r18, r0
     822:	11 24       	eor	r1, r1
     824:	12 2f       	mov	r17, r18
     826:	19 c0       	rjmp	.+50     	; 0x85a <vfprintf+0xe8>
     828:	8a e0       	ldi	r24, 0x0A	; 10
     82a:	58 9e       	mul	r5, r24
     82c:	20 0d       	add	r18, r0
     82e:	11 24       	eor	r1, r1
     830:	52 2e       	mov	r5, r18
     832:	e9 2d       	mov	r30, r9
     834:	e0 62       	ori	r30, 0x20	; 32
     836:	9e 2e       	mov	r9, r30
     838:	10 c0       	rjmp	.+32     	; 0x85a <vfprintf+0xe8>
     83a:	8e 32       	cpi	r24, 0x2E	; 46
     83c:	31 f4       	brne	.+12     	; 0x84a <vfprintf+0xd8>
     83e:	96 fc       	sbrc	r9, 6
     840:	cc c2       	rjmp	.+1432   	; 0xdda <__stack+0x4db>
     842:	f9 2d       	mov	r31, r9
     844:	f0 64       	ori	r31, 0x40	; 64
     846:	9f 2e       	mov	r9, r31
     848:	08 c0       	rjmp	.+16     	; 0x85a <vfprintf+0xe8>
     84a:	8c 36       	cpi	r24, 0x6C	; 108
     84c:	21 f4       	brne	.+8      	; 0x856 <vfprintf+0xe4>
     84e:	29 2d       	mov	r18, r9
     850:	20 68       	ori	r18, 0x80	; 128
     852:	92 2e       	mov	r9, r18
     854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0xe8>
     856:	88 36       	cpi	r24, 0x68	; 104
     858:	41 f4       	brne	.+16     	; 0x86a <vfprintf+0xf8>
     85a:	f1 01       	movw	r30, r2
     85c:	93 fd       	sbrc	r25, 3
     85e:	85 91       	lpm	r24, Z+
     860:	93 ff       	sbrs	r25, 3
     862:	81 91       	ld	r24, Z+
     864:	1f 01       	movw	r2, r30
     866:	81 11       	cpse	r24, r1
     868:	b3 cf       	rjmp	.-154    	; 0x7d0 <vfprintf+0x5e>
     86a:	9b eb       	ldi	r25, 0xBB	; 187
     86c:	98 0f       	add	r25, r24
     86e:	93 30       	cpi	r25, 0x03	; 3
     870:	20 f4       	brcc	.+8      	; 0x87a <vfprintf+0x108>
     872:	99 2d       	mov	r25, r9
     874:	90 61       	ori	r25, 0x10	; 16
     876:	80 5e       	subi	r24, 0xE0	; 224
     878:	07 c0       	rjmp	.+14     	; 0x888 <vfprintf+0x116>
     87a:	9b e9       	ldi	r25, 0x9B	; 155
     87c:	98 0f       	add	r25, r24
     87e:	93 30       	cpi	r25, 0x03	; 3
     880:	08 f0       	brcs	.+2      	; 0x884 <vfprintf+0x112>
     882:	59 c1       	rjmp	.+690    	; 0xb36 <__stack+0x237>
     884:	99 2d       	mov	r25, r9
     886:	9f 7e       	andi	r25, 0xEF	; 239
     888:	96 ff       	sbrs	r25, 6
     88a:	16 e0       	ldi	r17, 0x06	; 6
     88c:	9f 73       	andi	r25, 0x3F	; 63
     88e:	99 2e       	mov	r9, r25
     890:	85 36       	cpi	r24, 0x65	; 101
     892:	19 f4       	brne	.+6      	; 0x89a <vfprintf+0x128>
     894:	90 64       	ori	r25, 0x40	; 64
     896:	99 2e       	mov	r9, r25
     898:	08 c0       	rjmp	.+16     	; 0x8aa <vfprintf+0x138>
     89a:	86 36       	cpi	r24, 0x66	; 102
     89c:	21 f4       	brne	.+8      	; 0x8a6 <vfprintf+0x134>
     89e:	39 2f       	mov	r19, r25
     8a0:	30 68       	ori	r19, 0x80	; 128
     8a2:	93 2e       	mov	r9, r19
     8a4:	02 c0       	rjmp	.+4      	; 0x8aa <vfprintf+0x138>
     8a6:	11 11       	cpse	r17, r1
     8a8:	11 50       	subi	r17, 0x01	; 1
     8aa:	97 fe       	sbrs	r9, 7
     8ac:	07 c0       	rjmp	.+14     	; 0x8bc <vfprintf+0x14a>
     8ae:	1c 33       	cpi	r17, 0x3C	; 60
     8b0:	50 f4       	brcc	.+20     	; 0x8c6 <vfprintf+0x154>
     8b2:	44 24       	eor	r4, r4
     8b4:	43 94       	inc	r4
     8b6:	41 0e       	add	r4, r17
     8b8:	27 e0       	ldi	r18, 0x07	; 7
     8ba:	0b c0       	rjmp	.+22     	; 0x8d2 <vfprintf+0x160>
     8bc:	18 30       	cpi	r17, 0x08	; 8
     8be:	38 f0       	brcs	.+14     	; 0x8ce <vfprintf+0x15c>
     8c0:	27 e0       	ldi	r18, 0x07	; 7
     8c2:	17 e0       	ldi	r17, 0x07	; 7
     8c4:	05 c0       	rjmp	.+10     	; 0x8d0 <vfprintf+0x15e>
     8c6:	27 e0       	ldi	r18, 0x07	; 7
     8c8:	9c e3       	ldi	r25, 0x3C	; 60
     8ca:	49 2e       	mov	r4, r25
     8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <vfprintf+0x160>
     8ce:	21 2f       	mov	r18, r17
     8d0:	41 2c       	mov	r4, r1
     8d2:	56 01       	movw	r10, r12
     8d4:	84 e0       	ldi	r24, 0x04	; 4
     8d6:	a8 0e       	add	r10, r24
     8d8:	b1 1c       	adc	r11, r1
     8da:	f6 01       	movw	r30, r12
     8dc:	60 81       	ld	r22, Z
     8de:	71 81       	ldd	r23, Z+1	; 0x01
     8e0:	82 81       	ldd	r24, Z+2	; 0x02
     8e2:	93 81       	ldd	r25, Z+3	; 0x03
     8e4:	04 2d       	mov	r16, r4
     8e6:	a3 01       	movw	r20, r6
     8e8:	d9 d2       	rcall	.+1458   	; 0xe9c <__ftoa_engine>
     8ea:	6c 01       	movw	r12, r24
     8ec:	f9 81       	ldd	r31, Y+1	; 0x01
     8ee:	fc 87       	std	Y+12, r31	; 0x0c
     8f0:	f0 ff       	sbrs	r31, 0
     8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0x186>
     8f4:	f3 ff       	sbrs	r31, 3
     8f6:	06 c0       	rjmp	.+12     	; 0x904 <__stack+0x5>
     8f8:	91 fc       	sbrc	r9, 1
     8fa:	06 c0       	rjmp	.+12     	; 0x908 <__stack+0x9>
     8fc:	92 fe       	sbrs	r9, 2
     8fe:	06 c0       	rjmp	.+12     	; 0x90c <__stack+0xd>
     900:	00 e2       	ldi	r16, 0x20	; 32
     902:	05 c0       	rjmp	.+10     	; 0x90e <__stack+0xf>
     904:	0d e2       	ldi	r16, 0x2D	; 45
     906:	03 c0       	rjmp	.+6      	; 0x90e <__stack+0xf>
     908:	0b e2       	ldi	r16, 0x2B	; 43
     90a:	01 c0       	rjmp	.+2      	; 0x90e <__stack+0xf>
     90c:	00 e0       	ldi	r16, 0x00	; 0
     90e:	8c 85       	ldd	r24, Y+12	; 0x0c
     910:	8c 70       	andi	r24, 0x0C	; 12
     912:	19 f0       	breq	.+6      	; 0x91a <__stack+0x1b>
     914:	01 11       	cpse	r16, r1
     916:	43 c2       	rjmp	.+1158   	; 0xd9e <__stack+0x49f>
     918:	80 c2       	rjmp	.+1280   	; 0xe1a <__stack+0x51b>
     91a:	97 fe       	sbrs	r9, 7
     91c:	10 c0       	rjmp	.+32     	; 0x93e <__stack+0x3f>
     91e:	4c 0c       	add	r4, r12
     920:	fc 85       	ldd	r31, Y+12	; 0x0c
     922:	f4 ff       	sbrs	r31, 4
     924:	04 c0       	rjmp	.+8      	; 0x92e <__stack+0x2f>
     926:	8a 81       	ldd	r24, Y+2	; 0x02
     928:	81 33       	cpi	r24, 0x31	; 49
     92a:	09 f4       	brne	.+2      	; 0x92e <__stack+0x2f>
     92c:	4a 94       	dec	r4
     92e:	14 14       	cp	r1, r4
     930:	74 f5       	brge	.+92     	; 0x98e <__stack+0x8f>
     932:	28 e0       	ldi	r18, 0x08	; 8
     934:	24 15       	cp	r18, r4
     936:	78 f5       	brcc	.+94     	; 0x996 <__stack+0x97>
     938:	88 e0       	ldi	r24, 0x08	; 8
     93a:	48 2e       	mov	r4, r24
     93c:	2c c0       	rjmp	.+88     	; 0x996 <__stack+0x97>
     93e:	96 fc       	sbrc	r9, 6
     940:	2a c0       	rjmp	.+84     	; 0x996 <__stack+0x97>
     942:	81 2f       	mov	r24, r17
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	8c 15       	cp	r24, r12
     948:	9d 05       	cpc	r25, r13
     94a:	9c f0       	brlt	.+38     	; 0x972 <__stack+0x73>
     94c:	3c ef       	ldi	r19, 0xFC	; 252
     94e:	c3 16       	cp	r12, r19
     950:	3f ef       	ldi	r19, 0xFF	; 255
     952:	d3 06       	cpc	r13, r19
     954:	74 f0       	brlt	.+28     	; 0x972 <__stack+0x73>
     956:	89 2d       	mov	r24, r9
     958:	80 68       	ori	r24, 0x80	; 128
     95a:	98 2e       	mov	r9, r24
     95c:	0a c0       	rjmp	.+20     	; 0x972 <__stack+0x73>
     95e:	e2 e0       	ldi	r30, 0x02	; 2
     960:	f0 e0       	ldi	r31, 0x00	; 0
     962:	ec 0f       	add	r30, r28
     964:	fd 1f       	adc	r31, r29
     966:	e1 0f       	add	r30, r17
     968:	f1 1d       	adc	r31, r1
     96a:	80 81       	ld	r24, Z
     96c:	80 33       	cpi	r24, 0x30	; 48
     96e:	19 f4       	brne	.+6      	; 0x976 <__stack+0x77>
     970:	11 50       	subi	r17, 0x01	; 1
     972:	11 11       	cpse	r17, r1
     974:	f4 cf       	rjmp	.-24     	; 0x95e <__stack+0x5f>
     976:	97 fe       	sbrs	r9, 7
     978:	0e c0       	rjmp	.+28     	; 0x996 <__stack+0x97>
     97a:	44 24       	eor	r4, r4
     97c:	43 94       	inc	r4
     97e:	41 0e       	add	r4, r17
     980:	81 2f       	mov	r24, r17
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	c8 16       	cp	r12, r24
     986:	d9 06       	cpc	r13, r25
     988:	2c f4       	brge	.+10     	; 0x994 <__stack+0x95>
     98a:	1c 19       	sub	r17, r12
     98c:	04 c0       	rjmp	.+8      	; 0x996 <__stack+0x97>
     98e:	44 24       	eor	r4, r4
     990:	43 94       	inc	r4
     992:	01 c0       	rjmp	.+2      	; 0x996 <__stack+0x97>
     994:	10 e0       	ldi	r17, 0x00	; 0
     996:	97 fe       	sbrs	r9, 7
     998:	06 c0       	rjmp	.+12     	; 0x9a6 <__stack+0xa7>
     99a:	1c 14       	cp	r1, r12
     99c:	1d 04       	cpc	r1, r13
     99e:	34 f4       	brge	.+12     	; 0x9ac <__stack+0xad>
     9a0:	c6 01       	movw	r24, r12
     9a2:	01 96       	adiw	r24, 0x01	; 1
     9a4:	05 c0       	rjmp	.+10     	; 0x9b0 <__stack+0xb1>
     9a6:	85 e0       	ldi	r24, 0x05	; 5
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <__stack+0xb1>
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	01 11       	cpse	r16, r1
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	11 23       	and	r17, r17
     9b6:	31 f0       	breq	.+12     	; 0x9c4 <__stack+0xc5>
     9b8:	21 2f       	mov	r18, r17
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	2f 5f       	subi	r18, 0xFF	; 255
     9be:	3f 4f       	sbci	r19, 0xFF	; 255
     9c0:	82 0f       	add	r24, r18
     9c2:	93 1f       	adc	r25, r19
     9c4:	25 2d       	mov	r18, r5
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	82 17       	cp	r24, r18
     9ca:	93 07       	cpc	r25, r19
     9cc:	14 f4       	brge	.+4      	; 0x9d2 <__stack+0xd3>
     9ce:	58 1a       	sub	r5, r24
     9d0:	01 c0       	rjmp	.+2      	; 0x9d4 <__stack+0xd5>
     9d2:	51 2c       	mov	r5, r1
     9d4:	89 2d       	mov	r24, r9
     9d6:	89 70       	andi	r24, 0x09	; 9
     9d8:	41 f4       	brne	.+16     	; 0x9ea <__stack+0xeb>
     9da:	55 20       	and	r5, r5
     9dc:	31 f0       	breq	.+12     	; 0x9ea <__stack+0xeb>
     9de:	b7 01       	movw	r22, r14
     9e0:	80 e2       	ldi	r24, 0x20	; 32
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	49 d3       	rcall	.+1682   	; 0x1078 <fputc>
     9e6:	5a 94       	dec	r5
     9e8:	f8 cf       	rjmp	.-16     	; 0x9da <__stack+0xdb>
     9ea:	00 23       	and	r16, r16
     9ec:	21 f0       	breq	.+8      	; 0x9f6 <__stack+0xf7>
     9ee:	b7 01       	movw	r22, r14
     9f0:	80 2f       	mov	r24, r16
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	41 d3       	rcall	.+1666   	; 0x1078 <fputc>
     9f6:	93 fc       	sbrc	r9, 3
     9f8:	08 c0       	rjmp	.+16     	; 0xa0a <__stack+0x10b>
     9fa:	55 20       	and	r5, r5
     9fc:	31 f0       	breq	.+12     	; 0xa0a <__stack+0x10b>
     9fe:	b7 01       	movw	r22, r14
     a00:	80 e3       	ldi	r24, 0x30	; 48
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	39 d3       	rcall	.+1650   	; 0x1078 <fputc>
     a06:	5a 94       	dec	r5
     a08:	f8 cf       	rjmp	.-16     	; 0x9fa <__stack+0xfb>
     a0a:	97 fe       	sbrs	r9, 7
     a0c:	4a c0       	rjmp	.+148    	; 0xaa2 <__stack+0x1a3>
     a0e:	46 01       	movw	r8, r12
     a10:	d7 fe       	sbrs	r13, 7
     a12:	02 c0       	rjmp	.+4      	; 0xa18 <__stack+0x119>
     a14:	81 2c       	mov	r8, r1
     a16:	91 2c       	mov	r9, r1
     a18:	c6 01       	movw	r24, r12
     a1a:	88 19       	sub	r24, r8
     a1c:	99 09       	sbc	r25, r9
     a1e:	f3 01       	movw	r30, r6
     a20:	e8 0f       	add	r30, r24
     a22:	f9 1f       	adc	r31, r25
     a24:	fe 87       	std	Y+14, r31	; 0x0e
     a26:	ed 87       	std	Y+13, r30	; 0x0d
     a28:	96 01       	movw	r18, r12
     a2a:	24 19       	sub	r18, r4
     a2c:	31 09       	sbc	r19, r1
     a2e:	38 8b       	std	Y+16, r19	; 0x10
     a30:	2f 87       	std	Y+15, r18	; 0x0f
     a32:	01 2f       	mov	r16, r17
     a34:	10 e0       	ldi	r17, 0x00	; 0
     a36:	11 95       	neg	r17
     a38:	01 95       	neg	r16
     a3a:	11 09       	sbc	r17, r1
     a3c:	3f ef       	ldi	r19, 0xFF	; 255
     a3e:	83 16       	cp	r8, r19
     a40:	93 06       	cpc	r9, r19
     a42:	21 f4       	brne	.+8      	; 0xa4c <__stack+0x14d>
     a44:	b7 01       	movw	r22, r14
     a46:	8e e2       	ldi	r24, 0x2E	; 46
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	16 d3       	rcall	.+1580   	; 0x1078 <fputc>
     a4c:	c8 14       	cp	r12, r8
     a4e:	d9 04       	cpc	r13, r9
     a50:	4c f0       	brlt	.+18     	; 0xa64 <__stack+0x165>
     a52:	8f 85       	ldd	r24, Y+15	; 0x0f
     a54:	98 89       	ldd	r25, Y+16	; 0x10
     a56:	88 15       	cp	r24, r8
     a58:	99 05       	cpc	r25, r9
     a5a:	24 f4       	brge	.+8      	; 0xa64 <__stack+0x165>
     a5c:	ed 85       	ldd	r30, Y+13	; 0x0d
     a5e:	fe 85       	ldd	r31, Y+14	; 0x0e
     a60:	81 81       	ldd	r24, Z+1	; 0x01
     a62:	01 c0       	rjmp	.+2      	; 0xa66 <__stack+0x167>
     a64:	80 e3       	ldi	r24, 0x30	; 48
     a66:	f1 e0       	ldi	r31, 0x01	; 1
     a68:	8f 1a       	sub	r8, r31
     a6a:	91 08       	sbc	r9, r1
     a6c:	2d 85       	ldd	r18, Y+13	; 0x0d
     a6e:	3e 85       	ldd	r19, Y+14	; 0x0e
     a70:	2f 5f       	subi	r18, 0xFF	; 255
     a72:	3f 4f       	sbci	r19, 0xFF	; 255
     a74:	3e 87       	std	Y+14, r19	; 0x0e
     a76:	2d 87       	std	Y+13, r18	; 0x0d
     a78:	80 16       	cp	r8, r16
     a7a:	91 06       	cpc	r9, r17
     a7c:	24 f0       	brlt	.+8      	; 0xa86 <__stack+0x187>
     a7e:	b7 01       	movw	r22, r14
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	fa d2       	rcall	.+1524   	; 0x1078 <fputc>
     a84:	db cf       	rjmp	.-74     	; 0xa3c <__stack+0x13d>
     a86:	c8 14       	cp	r12, r8
     a88:	d9 04       	cpc	r13, r9
     a8a:	41 f4       	brne	.+16     	; 0xa9c <__stack+0x19d>
     a8c:	9a 81       	ldd	r25, Y+2	; 0x02
     a8e:	96 33       	cpi	r25, 0x36	; 54
     a90:	20 f4       	brcc	.+8      	; 0xa9a <__stack+0x19b>
     a92:	95 33       	cpi	r25, 0x35	; 53
     a94:	19 f4       	brne	.+6      	; 0xa9c <__stack+0x19d>
     a96:	3c 85       	ldd	r19, Y+12	; 0x0c
     a98:	34 ff       	sbrs	r19, 4
     a9a:	81 e3       	ldi	r24, 0x31	; 49
     a9c:	b7 01       	movw	r22, r14
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	48 c0       	rjmp	.+144    	; 0xb32 <__stack+0x233>
     aa2:	8a 81       	ldd	r24, Y+2	; 0x02
     aa4:	81 33       	cpi	r24, 0x31	; 49
     aa6:	19 f0       	breq	.+6      	; 0xaae <__stack+0x1af>
     aa8:	9c 85       	ldd	r25, Y+12	; 0x0c
     aaa:	9f 7e       	andi	r25, 0xEF	; 239
     aac:	9c 87       	std	Y+12, r25	; 0x0c
     aae:	b7 01       	movw	r22, r14
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	e2 d2       	rcall	.+1476   	; 0x1078 <fputc>
     ab4:	11 11       	cpse	r17, r1
     ab6:	05 c0       	rjmp	.+10     	; 0xac2 <__stack+0x1c3>
     ab8:	94 fc       	sbrc	r9, 4
     aba:	16 c0       	rjmp	.+44     	; 0xae8 <__stack+0x1e9>
     abc:	85 e6       	ldi	r24, 0x65	; 101
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	15 c0       	rjmp	.+42     	; 0xaec <__stack+0x1ed>
     ac2:	b7 01       	movw	r22, r14
     ac4:	8e e2       	ldi	r24, 0x2E	; 46
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	d7 d2       	rcall	.+1454   	; 0x1078 <fputc>
     aca:	1e 5f       	subi	r17, 0xFE	; 254
     acc:	82 e0       	ldi	r24, 0x02	; 2
     ace:	01 e0       	ldi	r16, 0x01	; 1
     ad0:	08 0f       	add	r16, r24
     ad2:	f3 01       	movw	r30, r6
     ad4:	e8 0f       	add	r30, r24
     ad6:	f1 1d       	adc	r31, r1
     ad8:	80 81       	ld	r24, Z
     ada:	b7 01       	movw	r22, r14
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	cc d2       	rcall	.+1432   	; 0x1078 <fputc>
     ae0:	80 2f       	mov	r24, r16
     ae2:	01 13       	cpse	r16, r17
     ae4:	f4 cf       	rjmp	.-24     	; 0xace <__stack+0x1cf>
     ae6:	e8 cf       	rjmp	.-48     	; 0xab8 <__stack+0x1b9>
     ae8:	85 e4       	ldi	r24, 0x45	; 69
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	b7 01       	movw	r22, r14
     aee:	c4 d2       	rcall	.+1416   	; 0x1078 <fputc>
     af0:	d7 fc       	sbrc	r13, 7
     af2:	06 c0       	rjmp	.+12     	; 0xb00 <__stack+0x201>
     af4:	c1 14       	cp	r12, r1
     af6:	d1 04       	cpc	r13, r1
     af8:	41 f4       	brne	.+16     	; 0xb0a <__stack+0x20b>
     afa:	ec 85       	ldd	r30, Y+12	; 0x0c
     afc:	e4 ff       	sbrs	r30, 4
     afe:	05 c0       	rjmp	.+10     	; 0xb0a <__stack+0x20b>
     b00:	d1 94       	neg	r13
     b02:	c1 94       	neg	r12
     b04:	d1 08       	sbc	r13, r1
     b06:	8d e2       	ldi	r24, 0x2D	; 45
     b08:	01 c0       	rjmp	.+2      	; 0xb0c <__stack+0x20d>
     b0a:	8b e2       	ldi	r24, 0x2B	; 43
     b0c:	b7 01       	movw	r22, r14
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	b3 d2       	rcall	.+1382   	; 0x1078 <fputc>
     b12:	80 e3       	ldi	r24, 0x30	; 48
     b14:	2a e0       	ldi	r18, 0x0A	; 10
     b16:	c2 16       	cp	r12, r18
     b18:	d1 04       	cpc	r13, r1
     b1a:	2c f0       	brlt	.+10     	; 0xb26 <__stack+0x227>
     b1c:	8f 5f       	subi	r24, 0xFF	; 255
     b1e:	fa e0       	ldi	r31, 0x0A	; 10
     b20:	cf 1a       	sub	r12, r31
     b22:	d1 08       	sbc	r13, r1
     b24:	f7 cf       	rjmp	.-18     	; 0xb14 <__stack+0x215>
     b26:	b7 01       	movw	r22, r14
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	a6 d2       	rcall	.+1356   	; 0x1078 <fputc>
     b2c:	b7 01       	movw	r22, r14
     b2e:	c6 01       	movw	r24, r12
     b30:	c0 96       	adiw	r24, 0x30	; 48
     b32:	a2 d2       	rcall	.+1348   	; 0x1078 <fputc>
     b34:	49 c1       	rjmp	.+658    	; 0xdc8 <__stack+0x4c9>
     b36:	83 36       	cpi	r24, 0x63	; 99
     b38:	31 f0       	breq	.+12     	; 0xb46 <__stack+0x247>
     b3a:	83 37       	cpi	r24, 0x73	; 115
     b3c:	79 f0       	breq	.+30     	; 0xb5c <__stack+0x25d>
     b3e:	83 35       	cpi	r24, 0x53	; 83
     b40:	09 f0       	breq	.+2      	; 0xb44 <__stack+0x245>
     b42:	52 c0       	rjmp	.+164    	; 0xbe8 <__stack+0x2e9>
     b44:	1f c0       	rjmp	.+62     	; 0xb84 <__stack+0x285>
     b46:	56 01       	movw	r10, r12
     b48:	32 e0       	ldi	r19, 0x02	; 2
     b4a:	a3 0e       	add	r10, r19
     b4c:	b1 1c       	adc	r11, r1
     b4e:	f6 01       	movw	r30, r12
     b50:	80 81       	ld	r24, Z
     b52:	89 83       	std	Y+1, r24	; 0x01
     b54:	01 e0       	ldi	r16, 0x01	; 1
     b56:	10 e0       	ldi	r17, 0x00	; 0
     b58:	63 01       	movw	r12, r6
     b5a:	11 c0       	rjmp	.+34     	; 0xb7e <__stack+0x27f>
     b5c:	56 01       	movw	r10, r12
     b5e:	f2 e0       	ldi	r31, 0x02	; 2
     b60:	af 0e       	add	r10, r31
     b62:	b1 1c       	adc	r11, r1
     b64:	f6 01       	movw	r30, r12
     b66:	c0 80       	ld	r12, Z
     b68:	d1 80       	ldd	r13, Z+1	; 0x01
     b6a:	96 fe       	sbrs	r9, 6
     b6c:	03 c0       	rjmp	.+6      	; 0xb74 <__stack+0x275>
     b6e:	61 2f       	mov	r22, r17
     b70:	70 e0       	ldi	r23, 0x00	; 0
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <__stack+0x279>
     b74:	6f ef       	ldi	r22, 0xFF	; 255
     b76:	7f ef       	ldi	r23, 0xFF	; 255
     b78:	c6 01       	movw	r24, r12
     b7a:	73 d2       	rcall	.+1254   	; 0x1062 <strnlen>
     b7c:	8c 01       	movw	r16, r24
     b7e:	f9 2d       	mov	r31, r9
     b80:	ff 77       	andi	r31, 0x7F	; 127
     b82:	13 c0       	rjmp	.+38     	; 0xbaa <__stack+0x2ab>
     b84:	56 01       	movw	r10, r12
     b86:	22 e0       	ldi	r18, 0x02	; 2
     b88:	a2 0e       	add	r10, r18
     b8a:	b1 1c       	adc	r11, r1
     b8c:	f6 01       	movw	r30, r12
     b8e:	c0 80       	ld	r12, Z
     b90:	d1 80       	ldd	r13, Z+1	; 0x01
     b92:	96 fe       	sbrs	r9, 6
     b94:	03 c0       	rjmp	.+6      	; 0xb9c <__stack+0x29d>
     b96:	61 2f       	mov	r22, r17
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <__stack+0x2a1>
     b9c:	6f ef       	ldi	r22, 0xFF	; 255
     b9e:	7f ef       	ldi	r23, 0xFF	; 255
     ba0:	c6 01       	movw	r24, r12
     ba2:	54 d2       	rcall	.+1192   	; 0x104c <strnlen_P>
     ba4:	8c 01       	movw	r16, r24
     ba6:	f9 2d       	mov	r31, r9
     ba8:	f0 68       	ori	r31, 0x80	; 128
     baa:	9f 2e       	mov	r9, r31
     bac:	f3 fd       	sbrc	r31, 3
     bae:	18 c0       	rjmp	.+48     	; 0xbe0 <__stack+0x2e1>
     bb0:	85 2d       	mov	r24, r5
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	08 17       	cp	r16, r24
     bb6:	19 07       	cpc	r17, r25
     bb8:	98 f4       	brcc	.+38     	; 0xbe0 <__stack+0x2e1>
     bba:	b7 01       	movw	r22, r14
     bbc:	80 e2       	ldi	r24, 0x20	; 32
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	5b d2       	rcall	.+1206   	; 0x1078 <fputc>
     bc2:	5a 94       	dec	r5
     bc4:	f5 cf       	rjmp	.-22     	; 0xbb0 <__stack+0x2b1>
     bc6:	f6 01       	movw	r30, r12
     bc8:	97 fc       	sbrc	r9, 7
     bca:	85 91       	lpm	r24, Z+
     bcc:	97 fe       	sbrs	r9, 7
     bce:	81 91       	ld	r24, Z+
     bd0:	6f 01       	movw	r12, r30
     bd2:	b7 01       	movw	r22, r14
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	50 d2       	rcall	.+1184   	; 0x1078 <fputc>
     bd8:	51 10       	cpse	r5, r1
     bda:	5a 94       	dec	r5
     bdc:	01 50       	subi	r16, 0x01	; 1
     bde:	11 09       	sbc	r17, r1
     be0:	01 15       	cp	r16, r1
     be2:	11 05       	cpc	r17, r1
     be4:	81 f7       	brne	.-32     	; 0xbc6 <__stack+0x2c7>
     be6:	f0 c0       	rjmp	.+480    	; 0xdc8 <__stack+0x4c9>
     be8:	84 36       	cpi	r24, 0x64	; 100
     bea:	11 f0       	breq	.+4      	; 0xbf0 <__stack+0x2f1>
     bec:	89 36       	cpi	r24, 0x69	; 105
     bee:	59 f5       	brne	.+86     	; 0xc46 <__stack+0x347>
     bf0:	56 01       	movw	r10, r12
     bf2:	97 fe       	sbrs	r9, 7
     bf4:	09 c0       	rjmp	.+18     	; 0xc08 <__stack+0x309>
     bf6:	24 e0       	ldi	r18, 0x04	; 4
     bf8:	a2 0e       	add	r10, r18
     bfa:	b1 1c       	adc	r11, r1
     bfc:	f6 01       	movw	r30, r12
     bfe:	60 81       	ld	r22, Z
     c00:	71 81       	ldd	r23, Z+1	; 0x01
     c02:	82 81       	ldd	r24, Z+2	; 0x02
     c04:	93 81       	ldd	r25, Z+3	; 0x03
     c06:	0a c0       	rjmp	.+20     	; 0xc1c <__stack+0x31d>
     c08:	f2 e0       	ldi	r31, 0x02	; 2
     c0a:	af 0e       	add	r10, r31
     c0c:	b1 1c       	adc	r11, r1
     c0e:	f6 01       	movw	r30, r12
     c10:	60 81       	ld	r22, Z
     c12:	71 81       	ldd	r23, Z+1	; 0x01
     c14:	07 2e       	mov	r0, r23
     c16:	00 0c       	add	r0, r0
     c18:	88 0b       	sbc	r24, r24
     c1a:	99 0b       	sbc	r25, r25
     c1c:	f9 2d       	mov	r31, r9
     c1e:	ff 76       	andi	r31, 0x6F	; 111
     c20:	9f 2e       	mov	r9, r31
     c22:	97 ff       	sbrs	r25, 7
     c24:	09 c0       	rjmp	.+18     	; 0xc38 <__stack+0x339>
     c26:	90 95       	com	r25
     c28:	80 95       	com	r24
     c2a:	70 95       	com	r23
     c2c:	61 95       	neg	r22
     c2e:	7f 4f       	sbci	r23, 0xFF	; 255
     c30:	8f 4f       	sbci	r24, 0xFF	; 255
     c32:	9f 4f       	sbci	r25, 0xFF	; 255
     c34:	f0 68       	ori	r31, 0x80	; 128
     c36:	9f 2e       	mov	r9, r31
     c38:	2a e0       	ldi	r18, 0x0A	; 10
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	a3 01       	movw	r20, r6
     c3e:	77 d2       	rcall	.+1262   	; 0x112e <__ultoa_invert>
     c40:	c8 2e       	mov	r12, r24
     c42:	c6 18       	sub	r12, r6
     c44:	3e c0       	rjmp	.+124    	; 0xcc2 <__stack+0x3c3>
     c46:	09 2d       	mov	r16, r9
     c48:	85 37       	cpi	r24, 0x75	; 117
     c4a:	21 f4       	brne	.+8      	; 0xc54 <__stack+0x355>
     c4c:	0f 7e       	andi	r16, 0xEF	; 239
     c4e:	2a e0       	ldi	r18, 0x0A	; 10
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	1d c0       	rjmp	.+58     	; 0xc8e <__stack+0x38f>
     c54:	09 7f       	andi	r16, 0xF9	; 249
     c56:	8f 36       	cpi	r24, 0x6F	; 111
     c58:	91 f0       	breq	.+36     	; 0xc7e <__stack+0x37f>
     c5a:	18 f4       	brcc	.+6      	; 0xc62 <__stack+0x363>
     c5c:	88 35       	cpi	r24, 0x58	; 88
     c5e:	59 f0       	breq	.+22     	; 0xc76 <__stack+0x377>
     c60:	bc c0       	rjmp	.+376    	; 0xdda <__stack+0x4db>
     c62:	80 37       	cpi	r24, 0x70	; 112
     c64:	19 f0       	breq	.+6      	; 0xc6c <__stack+0x36d>
     c66:	88 37       	cpi	r24, 0x78	; 120
     c68:	11 f0       	breq	.+4      	; 0xc6e <__stack+0x36f>
     c6a:	b7 c0       	rjmp	.+366    	; 0xdda <__stack+0x4db>
     c6c:	00 61       	ori	r16, 0x10	; 16
     c6e:	04 ff       	sbrs	r16, 4
     c70:	09 c0       	rjmp	.+18     	; 0xc84 <__stack+0x385>
     c72:	04 60       	ori	r16, 0x04	; 4
     c74:	07 c0       	rjmp	.+14     	; 0xc84 <__stack+0x385>
     c76:	94 fe       	sbrs	r9, 4
     c78:	08 c0       	rjmp	.+16     	; 0xc8a <__stack+0x38b>
     c7a:	06 60       	ori	r16, 0x06	; 6
     c7c:	06 c0       	rjmp	.+12     	; 0xc8a <__stack+0x38b>
     c7e:	28 e0       	ldi	r18, 0x08	; 8
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	05 c0       	rjmp	.+10     	; 0xc8e <__stack+0x38f>
     c84:	20 e1       	ldi	r18, 0x10	; 16
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	02 c0       	rjmp	.+4      	; 0xc8e <__stack+0x38f>
     c8a:	20 e1       	ldi	r18, 0x10	; 16
     c8c:	32 e0       	ldi	r19, 0x02	; 2
     c8e:	56 01       	movw	r10, r12
     c90:	07 ff       	sbrs	r16, 7
     c92:	09 c0       	rjmp	.+18     	; 0xca6 <__stack+0x3a7>
     c94:	84 e0       	ldi	r24, 0x04	; 4
     c96:	a8 0e       	add	r10, r24
     c98:	b1 1c       	adc	r11, r1
     c9a:	f6 01       	movw	r30, r12
     c9c:	60 81       	ld	r22, Z
     c9e:	71 81       	ldd	r23, Z+1	; 0x01
     ca0:	82 81       	ldd	r24, Z+2	; 0x02
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	08 c0       	rjmp	.+16     	; 0xcb6 <__stack+0x3b7>
     ca6:	f2 e0       	ldi	r31, 0x02	; 2
     ca8:	af 0e       	add	r10, r31
     caa:	b1 1c       	adc	r11, r1
     cac:	f6 01       	movw	r30, r12
     cae:	60 81       	ld	r22, Z
     cb0:	71 81       	ldd	r23, Z+1	; 0x01
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	a3 01       	movw	r20, r6
     cb8:	3a d2       	rcall	.+1140   	; 0x112e <__ultoa_invert>
     cba:	c8 2e       	mov	r12, r24
     cbc:	c6 18       	sub	r12, r6
     cbe:	0f 77       	andi	r16, 0x7F	; 127
     cc0:	90 2e       	mov	r9, r16
     cc2:	96 fe       	sbrs	r9, 6
     cc4:	0b c0       	rjmp	.+22     	; 0xcdc <__stack+0x3dd>
     cc6:	09 2d       	mov	r16, r9
     cc8:	0e 7f       	andi	r16, 0xFE	; 254
     cca:	c1 16       	cp	r12, r17
     ccc:	50 f4       	brcc	.+20     	; 0xce2 <__stack+0x3e3>
     cce:	94 fe       	sbrs	r9, 4
     cd0:	0a c0       	rjmp	.+20     	; 0xce6 <__stack+0x3e7>
     cd2:	92 fc       	sbrc	r9, 2
     cd4:	08 c0       	rjmp	.+16     	; 0xce6 <__stack+0x3e7>
     cd6:	09 2d       	mov	r16, r9
     cd8:	0e 7e       	andi	r16, 0xEE	; 238
     cda:	05 c0       	rjmp	.+10     	; 0xce6 <__stack+0x3e7>
     cdc:	dc 2c       	mov	r13, r12
     cde:	09 2d       	mov	r16, r9
     ce0:	03 c0       	rjmp	.+6      	; 0xce8 <__stack+0x3e9>
     ce2:	dc 2c       	mov	r13, r12
     ce4:	01 c0       	rjmp	.+2      	; 0xce8 <__stack+0x3e9>
     ce6:	d1 2e       	mov	r13, r17
     ce8:	04 ff       	sbrs	r16, 4
     cea:	0d c0       	rjmp	.+26     	; 0xd06 <__stack+0x407>
     cec:	fe 01       	movw	r30, r28
     cee:	ec 0d       	add	r30, r12
     cf0:	f1 1d       	adc	r31, r1
     cf2:	80 81       	ld	r24, Z
     cf4:	80 33       	cpi	r24, 0x30	; 48
     cf6:	11 f4       	brne	.+4      	; 0xcfc <__stack+0x3fd>
     cf8:	09 7e       	andi	r16, 0xE9	; 233
     cfa:	09 c0       	rjmp	.+18     	; 0xd0e <__stack+0x40f>
     cfc:	02 ff       	sbrs	r16, 2
     cfe:	06 c0       	rjmp	.+12     	; 0xd0c <__stack+0x40d>
     d00:	d3 94       	inc	r13
     d02:	d3 94       	inc	r13
     d04:	04 c0       	rjmp	.+8      	; 0xd0e <__stack+0x40f>
     d06:	80 2f       	mov	r24, r16
     d08:	86 78       	andi	r24, 0x86	; 134
     d0a:	09 f0       	breq	.+2      	; 0xd0e <__stack+0x40f>
     d0c:	d3 94       	inc	r13
     d0e:	03 fd       	sbrc	r16, 3
     d10:	10 c0       	rjmp	.+32     	; 0xd32 <__stack+0x433>
     d12:	00 ff       	sbrs	r16, 0
     d14:	06 c0       	rjmp	.+12     	; 0xd22 <__stack+0x423>
     d16:	1c 2d       	mov	r17, r12
     d18:	d5 14       	cp	r13, r5
     d1a:	78 f4       	brcc	.+30     	; 0xd3a <__stack+0x43b>
     d1c:	15 0d       	add	r17, r5
     d1e:	1d 19       	sub	r17, r13
     d20:	0c c0       	rjmp	.+24     	; 0xd3a <__stack+0x43b>
     d22:	d5 14       	cp	r13, r5
     d24:	50 f4       	brcc	.+20     	; 0xd3a <__stack+0x43b>
     d26:	b7 01       	movw	r22, r14
     d28:	80 e2       	ldi	r24, 0x20	; 32
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	a5 d1       	rcall	.+842    	; 0x1078 <fputc>
     d2e:	d3 94       	inc	r13
     d30:	f8 cf       	rjmp	.-16     	; 0xd22 <__stack+0x423>
     d32:	d5 14       	cp	r13, r5
     d34:	10 f4       	brcc	.+4      	; 0xd3a <__stack+0x43b>
     d36:	5d 18       	sub	r5, r13
     d38:	01 c0       	rjmp	.+2      	; 0xd3c <__stack+0x43d>
     d3a:	51 2c       	mov	r5, r1
     d3c:	04 ff       	sbrs	r16, 4
     d3e:	0f c0       	rjmp	.+30     	; 0xd5e <__stack+0x45f>
     d40:	b7 01       	movw	r22, r14
     d42:	80 e3       	ldi	r24, 0x30	; 48
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	98 d1       	rcall	.+816    	; 0x1078 <fputc>
     d48:	02 ff       	sbrs	r16, 2
     d4a:	16 c0       	rjmp	.+44     	; 0xd78 <__stack+0x479>
     d4c:	01 fd       	sbrc	r16, 1
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <__stack+0x457>
     d50:	88 e7       	ldi	r24, 0x78	; 120
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <__stack+0x45b>
     d56:	88 e5       	ldi	r24, 0x58	; 88
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	b7 01       	movw	r22, r14
     d5c:	0c c0       	rjmp	.+24     	; 0xd76 <__stack+0x477>
     d5e:	80 2f       	mov	r24, r16
     d60:	86 78       	andi	r24, 0x86	; 134
     d62:	51 f0       	breq	.+20     	; 0xd78 <__stack+0x479>
     d64:	01 ff       	sbrs	r16, 1
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <__stack+0x46d>
     d68:	8b e2       	ldi	r24, 0x2B	; 43
     d6a:	01 c0       	rjmp	.+2      	; 0xd6e <__stack+0x46f>
     d6c:	80 e2       	ldi	r24, 0x20	; 32
     d6e:	07 fd       	sbrc	r16, 7
     d70:	8d e2       	ldi	r24, 0x2D	; 45
     d72:	b7 01       	movw	r22, r14
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	80 d1       	rcall	.+768    	; 0x1078 <fputc>
     d78:	c1 16       	cp	r12, r17
     d7a:	30 f4       	brcc	.+12     	; 0xd88 <__stack+0x489>
     d7c:	b7 01       	movw	r22, r14
     d7e:	80 e3       	ldi	r24, 0x30	; 48
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	7a d1       	rcall	.+756    	; 0x1078 <fputc>
     d84:	11 50       	subi	r17, 0x01	; 1
     d86:	f8 cf       	rjmp	.-16     	; 0xd78 <__stack+0x479>
     d88:	ca 94       	dec	r12
     d8a:	f3 01       	movw	r30, r6
     d8c:	ec 0d       	add	r30, r12
     d8e:	f1 1d       	adc	r31, r1
     d90:	80 81       	ld	r24, Z
     d92:	b7 01       	movw	r22, r14
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	70 d1       	rcall	.+736    	; 0x1078 <fputc>
     d98:	c1 10       	cpse	r12, r1
     d9a:	f6 cf       	rjmp	.-20     	; 0xd88 <__stack+0x489>
     d9c:	15 c0       	rjmp	.+42     	; 0xdc8 <__stack+0x4c9>
     d9e:	f4 e0       	ldi	r31, 0x04	; 4
     da0:	f5 15       	cp	r31, r5
     da2:	50 f5       	brcc	.+84     	; 0xdf8 <__stack+0x4f9>
     da4:	84 e0       	ldi	r24, 0x04	; 4
     da6:	58 1a       	sub	r5, r24
     da8:	93 fe       	sbrs	r9, 3
     daa:	1e c0       	rjmp	.+60     	; 0xde8 <__stack+0x4e9>
     dac:	01 11       	cpse	r16, r1
     dae:	25 c0       	rjmp	.+74     	; 0xdfa <__stack+0x4fb>
     db0:	2c 85       	ldd	r18, Y+12	; 0x0c
     db2:	23 ff       	sbrs	r18, 3
     db4:	27 c0       	rjmp	.+78     	; 0xe04 <__stack+0x505>
     db6:	08 e6       	ldi	r16, 0x68	; 104
     db8:	10 e0       	ldi	r17, 0x00	; 0
     dba:	39 2d       	mov	r19, r9
     dbc:	30 71       	andi	r19, 0x10	; 16
     dbe:	93 2e       	mov	r9, r19
     dc0:	f8 01       	movw	r30, r16
     dc2:	84 91       	lpm	r24, Z
     dc4:	81 11       	cpse	r24, r1
     dc6:	21 c0       	rjmp	.+66     	; 0xe0a <__stack+0x50b>
     dc8:	55 20       	and	r5, r5
     dca:	09 f4       	brne	.+2      	; 0xdce <__stack+0x4cf>
     dcc:	fc cc       	rjmp	.-1544   	; 0x7c6 <vfprintf+0x54>
     dce:	b7 01       	movw	r22, r14
     dd0:	80 e2       	ldi	r24, 0x20	; 32
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	51 d1       	rcall	.+674    	; 0x1078 <fputc>
     dd6:	5a 94       	dec	r5
     dd8:	f7 cf       	rjmp	.-18     	; 0xdc8 <__stack+0x4c9>
     dda:	f7 01       	movw	r30, r14
     ddc:	86 81       	ldd	r24, Z+6	; 0x06
     dde:	97 81       	ldd	r25, Z+7	; 0x07
     de0:	23 c0       	rjmp	.+70     	; 0xe28 <__stack+0x529>
     de2:	8f ef       	ldi	r24, 0xFF	; 255
     de4:	9f ef       	ldi	r25, 0xFF	; 255
     de6:	20 c0       	rjmp	.+64     	; 0xe28 <__stack+0x529>
     de8:	b7 01       	movw	r22, r14
     dea:	80 e2       	ldi	r24, 0x20	; 32
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	44 d1       	rcall	.+648    	; 0x1078 <fputc>
     df0:	5a 94       	dec	r5
     df2:	51 10       	cpse	r5, r1
     df4:	f9 cf       	rjmp	.-14     	; 0xde8 <__stack+0x4e9>
     df6:	da cf       	rjmp	.-76     	; 0xdac <__stack+0x4ad>
     df8:	51 2c       	mov	r5, r1
     dfa:	b7 01       	movw	r22, r14
     dfc:	80 2f       	mov	r24, r16
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	3b d1       	rcall	.+630    	; 0x1078 <fputc>
     e02:	d6 cf       	rjmp	.-84     	; 0xdb0 <__stack+0x4b1>
     e04:	0c e6       	ldi	r16, 0x6C	; 108
     e06:	10 e0       	ldi	r17, 0x00	; 0
     e08:	d8 cf       	rjmp	.-80     	; 0xdba <__stack+0x4bb>
     e0a:	91 10       	cpse	r9, r1
     e0c:	80 52       	subi	r24, 0x20	; 32
     e0e:	b7 01       	movw	r22, r14
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	32 d1       	rcall	.+612    	; 0x1078 <fputc>
     e14:	0f 5f       	subi	r16, 0xFF	; 255
     e16:	1f 4f       	sbci	r17, 0xFF	; 255
     e18:	d3 cf       	rjmp	.-90     	; 0xdc0 <__stack+0x4c1>
     e1a:	23 e0       	ldi	r18, 0x03	; 3
     e1c:	25 15       	cp	r18, r5
     e1e:	10 f4       	brcc	.+4      	; 0xe24 <__stack+0x525>
     e20:	83 e0       	ldi	r24, 0x03	; 3
     e22:	c1 cf       	rjmp	.-126    	; 0xda6 <__stack+0x4a7>
     e24:	51 2c       	mov	r5, r1
     e26:	c4 cf       	rjmp	.-120    	; 0xdb0 <__stack+0x4b1>
     e28:	60 96       	adiw	r28, 0x10	; 16
     e2a:	e2 e1       	ldi	r30, 0x12	; 18
     e2c:	1c c0       	rjmp	.+56     	; 0xe66 <__epilogue_restores__>

00000e2e <__prologue_saves__>:
     e2e:	2f 92       	push	r2
     e30:	3f 92       	push	r3
     e32:	4f 92       	push	r4
     e34:	5f 92       	push	r5
     e36:	6f 92       	push	r6
     e38:	7f 92       	push	r7
     e3a:	8f 92       	push	r8
     e3c:	9f 92       	push	r9
     e3e:	af 92       	push	r10
     e40:	bf 92       	push	r11
     e42:	cf 92       	push	r12
     e44:	df 92       	push	r13
     e46:	ef 92       	push	r14
     e48:	ff 92       	push	r15
     e4a:	0f 93       	push	r16
     e4c:	1f 93       	push	r17
     e4e:	cf 93       	push	r28
     e50:	df 93       	push	r29
     e52:	cd b7       	in	r28, 0x3d	; 61
     e54:	de b7       	in	r29, 0x3e	; 62
     e56:	ca 1b       	sub	r28, r26
     e58:	db 0b       	sbc	r29, r27
     e5a:	0f b6       	in	r0, 0x3f	; 63
     e5c:	f8 94       	cli
     e5e:	de bf       	out	0x3e, r29	; 62
     e60:	0f be       	out	0x3f, r0	; 63
     e62:	cd bf       	out	0x3d, r28	; 61
     e64:	09 94       	ijmp

00000e66 <__epilogue_restores__>:
     e66:	2a 88       	ldd	r2, Y+18	; 0x12
     e68:	39 88       	ldd	r3, Y+17	; 0x11
     e6a:	48 88       	ldd	r4, Y+16	; 0x10
     e6c:	5f 84       	ldd	r5, Y+15	; 0x0f
     e6e:	6e 84       	ldd	r6, Y+14	; 0x0e
     e70:	7d 84       	ldd	r7, Y+13	; 0x0d
     e72:	8c 84       	ldd	r8, Y+12	; 0x0c
     e74:	9b 84       	ldd	r9, Y+11	; 0x0b
     e76:	aa 84       	ldd	r10, Y+10	; 0x0a
     e78:	b9 84       	ldd	r11, Y+9	; 0x09
     e7a:	c8 84       	ldd	r12, Y+8	; 0x08
     e7c:	df 80       	ldd	r13, Y+7	; 0x07
     e7e:	ee 80       	ldd	r14, Y+6	; 0x06
     e80:	fd 80       	ldd	r15, Y+5	; 0x05
     e82:	0c 81       	ldd	r16, Y+4	; 0x04
     e84:	1b 81       	ldd	r17, Y+3	; 0x03
     e86:	aa 81       	ldd	r26, Y+2	; 0x02
     e88:	b9 81       	ldd	r27, Y+1	; 0x01
     e8a:	ce 0f       	add	r28, r30
     e8c:	d1 1d       	adc	r29, r1
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	f8 94       	cli
     e92:	de bf       	out	0x3e, r29	; 62
     e94:	0f be       	out	0x3f, r0	; 63
     e96:	cd bf       	out	0x3d, r28	; 61
     e98:	ed 01       	movw	r28, r26
     e9a:	08 95       	ret

00000e9c <__ftoa_engine>:
     e9c:	28 30       	cpi	r18, 0x08	; 8
     e9e:	08 f0       	brcs	.+2      	; 0xea2 <__ftoa_engine+0x6>
     ea0:	27 e0       	ldi	r18, 0x07	; 7
     ea2:	33 27       	eor	r19, r19
     ea4:	da 01       	movw	r26, r20
     ea6:	99 0f       	add	r25, r25
     ea8:	31 1d       	adc	r19, r1
     eaa:	87 fd       	sbrc	r24, 7
     eac:	91 60       	ori	r25, 0x01	; 1
     eae:	00 96       	adiw	r24, 0x00	; 0
     eb0:	61 05       	cpc	r22, r1
     eb2:	71 05       	cpc	r23, r1
     eb4:	39 f4       	brne	.+14     	; 0xec4 <__ftoa_engine+0x28>
     eb6:	32 60       	ori	r19, 0x02	; 2
     eb8:	2e 5f       	subi	r18, 0xFE	; 254
     eba:	3d 93       	st	X+, r19
     ebc:	30 e3       	ldi	r19, 0x30	; 48
     ebe:	2a 95       	dec	r18
     ec0:	e1 f7       	brne	.-8      	; 0xeba <__ftoa_engine+0x1e>
     ec2:	08 95       	ret
     ec4:	9f 3f       	cpi	r25, 0xFF	; 255
     ec6:	30 f0       	brcs	.+12     	; 0xed4 <__ftoa_engine+0x38>
     ec8:	80 38       	cpi	r24, 0x80	; 128
     eca:	71 05       	cpc	r23, r1
     ecc:	61 05       	cpc	r22, r1
     ece:	09 f0       	breq	.+2      	; 0xed2 <__ftoa_engine+0x36>
     ed0:	3c 5f       	subi	r19, 0xFC	; 252
     ed2:	3c 5f       	subi	r19, 0xFC	; 252
     ed4:	3d 93       	st	X+, r19
     ed6:	91 30       	cpi	r25, 0x01	; 1
     ed8:	08 f0       	brcs	.+2      	; 0xedc <__ftoa_engine+0x40>
     eda:	80 68       	ori	r24, 0x80	; 128
     edc:	91 1d       	adc	r25, r1
     ede:	df 93       	push	r29
     ee0:	cf 93       	push	r28
     ee2:	1f 93       	push	r17
     ee4:	0f 93       	push	r16
     ee6:	ff 92       	push	r15
     ee8:	ef 92       	push	r14
     eea:	19 2f       	mov	r17, r25
     eec:	98 7f       	andi	r25, 0xF8	; 248
     eee:	96 95       	lsr	r25
     ef0:	e9 2f       	mov	r30, r25
     ef2:	96 95       	lsr	r25
     ef4:	96 95       	lsr	r25
     ef6:	e9 0f       	add	r30, r25
     ef8:	ff 27       	eor	r31, r31
     efa:	e6 53       	subi	r30, 0x36	; 54
     efc:	ff 4f       	sbci	r31, 0xFF	; 255
     efe:	99 27       	eor	r25, r25
     f00:	33 27       	eor	r19, r19
     f02:	ee 24       	eor	r14, r14
     f04:	ff 24       	eor	r15, r15
     f06:	a7 01       	movw	r20, r14
     f08:	e7 01       	movw	r28, r14
     f0a:	05 90       	lpm	r0, Z+
     f0c:	08 94       	sec
     f0e:	07 94       	ror	r0
     f10:	28 f4       	brcc	.+10     	; 0xf1c <__ftoa_engine+0x80>
     f12:	36 0f       	add	r19, r22
     f14:	e7 1e       	adc	r14, r23
     f16:	f8 1e       	adc	r15, r24
     f18:	49 1f       	adc	r20, r25
     f1a:	51 1d       	adc	r21, r1
     f1c:	66 0f       	add	r22, r22
     f1e:	77 1f       	adc	r23, r23
     f20:	88 1f       	adc	r24, r24
     f22:	99 1f       	adc	r25, r25
     f24:	06 94       	lsr	r0
     f26:	a1 f7       	brne	.-24     	; 0xf10 <__ftoa_engine+0x74>
     f28:	05 90       	lpm	r0, Z+
     f2a:	07 94       	ror	r0
     f2c:	28 f4       	brcc	.+10     	; 0xf38 <__ftoa_engine+0x9c>
     f2e:	e7 0e       	add	r14, r23
     f30:	f8 1e       	adc	r15, r24
     f32:	49 1f       	adc	r20, r25
     f34:	56 1f       	adc	r21, r22
     f36:	c1 1d       	adc	r28, r1
     f38:	77 0f       	add	r23, r23
     f3a:	88 1f       	adc	r24, r24
     f3c:	99 1f       	adc	r25, r25
     f3e:	66 1f       	adc	r22, r22
     f40:	06 94       	lsr	r0
     f42:	a1 f7       	brne	.-24     	; 0xf2c <__ftoa_engine+0x90>
     f44:	05 90       	lpm	r0, Z+
     f46:	07 94       	ror	r0
     f48:	28 f4       	brcc	.+10     	; 0xf54 <__ftoa_engine+0xb8>
     f4a:	f8 0e       	add	r15, r24
     f4c:	49 1f       	adc	r20, r25
     f4e:	56 1f       	adc	r21, r22
     f50:	c7 1f       	adc	r28, r23
     f52:	d1 1d       	adc	r29, r1
     f54:	88 0f       	add	r24, r24
     f56:	99 1f       	adc	r25, r25
     f58:	66 1f       	adc	r22, r22
     f5a:	77 1f       	adc	r23, r23
     f5c:	06 94       	lsr	r0
     f5e:	a1 f7       	brne	.-24     	; 0xf48 <__ftoa_engine+0xac>
     f60:	05 90       	lpm	r0, Z+
     f62:	07 94       	ror	r0
     f64:	20 f4       	brcc	.+8      	; 0xf6e <__ftoa_engine+0xd2>
     f66:	49 0f       	add	r20, r25
     f68:	56 1f       	adc	r21, r22
     f6a:	c7 1f       	adc	r28, r23
     f6c:	d8 1f       	adc	r29, r24
     f6e:	99 0f       	add	r25, r25
     f70:	66 1f       	adc	r22, r22
     f72:	77 1f       	adc	r23, r23
     f74:	88 1f       	adc	r24, r24
     f76:	06 94       	lsr	r0
     f78:	a9 f7       	brne	.-22     	; 0xf64 <__ftoa_engine+0xc8>
     f7a:	84 91       	lpm	r24, Z
     f7c:	10 95       	com	r17
     f7e:	17 70       	andi	r17, 0x07	; 7
     f80:	41 f0       	breq	.+16     	; 0xf92 <__ftoa_engine+0xf6>
     f82:	d6 95       	lsr	r29
     f84:	c7 95       	ror	r28
     f86:	57 95       	ror	r21
     f88:	47 95       	ror	r20
     f8a:	f7 94       	ror	r15
     f8c:	e7 94       	ror	r14
     f8e:	1a 95       	dec	r17
     f90:	c1 f7       	brne	.-16     	; 0xf82 <__ftoa_engine+0xe6>
     f92:	e0 e7       	ldi	r30, 0x70	; 112
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	68 94       	set
     f98:	15 90       	lpm	r1, Z+
     f9a:	15 91       	lpm	r17, Z+
     f9c:	35 91       	lpm	r19, Z+
     f9e:	65 91       	lpm	r22, Z+
     fa0:	95 91       	lpm	r25, Z+
     fa2:	05 90       	lpm	r0, Z+
     fa4:	7f e2       	ldi	r23, 0x2F	; 47
     fa6:	73 95       	inc	r23
     fa8:	e1 18       	sub	r14, r1
     faa:	f1 0a       	sbc	r15, r17
     fac:	43 0b       	sbc	r20, r19
     fae:	56 0b       	sbc	r21, r22
     fb0:	c9 0b       	sbc	r28, r25
     fb2:	d0 09       	sbc	r29, r0
     fb4:	c0 f7       	brcc	.-16     	; 0xfa6 <__ftoa_engine+0x10a>
     fb6:	e1 0c       	add	r14, r1
     fb8:	f1 1e       	adc	r15, r17
     fba:	43 1f       	adc	r20, r19
     fbc:	56 1f       	adc	r21, r22
     fbe:	c9 1f       	adc	r28, r25
     fc0:	d0 1d       	adc	r29, r0
     fc2:	7e f4       	brtc	.+30     	; 0xfe2 <__ftoa_engine+0x146>
     fc4:	70 33       	cpi	r23, 0x30	; 48
     fc6:	11 f4       	brne	.+4      	; 0xfcc <__ftoa_engine+0x130>
     fc8:	8a 95       	dec	r24
     fca:	e6 cf       	rjmp	.-52     	; 0xf98 <__ftoa_engine+0xfc>
     fcc:	e8 94       	clt
     fce:	01 50       	subi	r16, 0x01	; 1
     fd0:	30 f0       	brcs	.+12     	; 0xfde <__ftoa_engine+0x142>
     fd2:	08 0f       	add	r16, r24
     fd4:	0a f4       	brpl	.+2      	; 0xfd8 <__ftoa_engine+0x13c>
     fd6:	00 27       	eor	r16, r16
     fd8:	02 17       	cp	r16, r18
     fda:	08 f4       	brcc	.+2      	; 0xfde <__ftoa_engine+0x142>
     fdc:	20 2f       	mov	r18, r16
     fde:	23 95       	inc	r18
     fe0:	02 2f       	mov	r16, r18
     fe2:	7a 33       	cpi	r23, 0x3A	; 58
     fe4:	28 f0       	brcs	.+10     	; 0xff0 <__ftoa_engine+0x154>
     fe6:	79 e3       	ldi	r23, 0x39	; 57
     fe8:	7d 93       	st	X+, r23
     fea:	2a 95       	dec	r18
     fec:	e9 f7       	brne	.-6      	; 0xfe8 <__ftoa_engine+0x14c>
     fee:	10 c0       	rjmp	.+32     	; 0x1010 <__ftoa_engine+0x174>
     ff0:	7d 93       	st	X+, r23
     ff2:	2a 95       	dec	r18
     ff4:	89 f6       	brne	.-94     	; 0xf98 <__ftoa_engine+0xfc>
     ff6:	06 94       	lsr	r0
     ff8:	97 95       	ror	r25
     ffa:	67 95       	ror	r22
     ffc:	37 95       	ror	r19
     ffe:	17 95       	ror	r17
    1000:	17 94       	ror	r1
    1002:	e1 18       	sub	r14, r1
    1004:	f1 0a       	sbc	r15, r17
    1006:	43 0b       	sbc	r20, r19
    1008:	56 0b       	sbc	r21, r22
    100a:	c9 0b       	sbc	r28, r25
    100c:	d0 09       	sbc	r29, r0
    100e:	98 f0       	brcs	.+38     	; 0x1036 <__ftoa_engine+0x19a>
    1010:	23 95       	inc	r18
    1012:	7e 91       	ld	r23, -X
    1014:	73 95       	inc	r23
    1016:	7a 33       	cpi	r23, 0x3A	; 58
    1018:	08 f0       	brcs	.+2      	; 0x101c <__ftoa_engine+0x180>
    101a:	70 e3       	ldi	r23, 0x30	; 48
    101c:	7c 93       	st	X, r23
    101e:	20 13       	cpse	r18, r16
    1020:	b8 f7       	brcc	.-18     	; 0x1010 <__ftoa_engine+0x174>
    1022:	7e 91       	ld	r23, -X
    1024:	70 61       	ori	r23, 0x10	; 16
    1026:	7d 93       	st	X+, r23
    1028:	30 f0       	brcs	.+12     	; 0x1036 <__ftoa_engine+0x19a>
    102a:	83 95       	inc	r24
    102c:	71 e3       	ldi	r23, 0x31	; 49
    102e:	7d 93       	st	X+, r23
    1030:	70 e3       	ldi	r23, 0x30	; 48
    1032:	2a 95       	dec	r18
    1034:	e1 f7       	brne	.-8      	; 0x102e <__ftoa_engine+0x192>
    1036:	11 24       	eor	r1, r1
    1038:	ef 90       	pop	r14
    103a:	ff 90       	pop	r15
    103c:	0f 91       	pop	r16
    103e:	1f 91       	pop	r17
    1040:	cf 91       	pop	r28
    1042:	df 91       	pop	r29
    1044:	99 27       	eor	r25, r25
    1046:	87 fd       	sbrc	r24, 7
    1048:	90 95       	com	r25
    104a:	08 95       	ret

0000104c <strnlen_P>:
    104c:	fc 01       	movw	r30, r24
    104e:	05 90       	lpm	r0, Z+
    1050:	61 50       	subi	r22, 0x01	; 1
    1052:	70 40       	sbci	r23, 0x00	; 0
    1054:	01 10       	cpse	r0, r1
    1056:	d8 f7       	brcc	.-10     	; 0x104e <strnlen_P+0x2>
    1058:	80 95       	com	r24
    105a:	90 95       	com	r25
    105c:	8e 0f       	add	r24, r30
    105e:	9f 1f       	adc	r25, r31
    1060:	08 95       	ret

00001062 <strnlen>:
    1062:	fc 01       	movw	r30, r24
    1064:	61 50       	subi	r22, 0x01	; 1
    1066:	70 40       	sbci	r23, 0x00	; 0
    1068:	01 90       	ld	r0, Z+
    106a:	01 10       	cpse	r0, r1
    106c:	d8 f7       	brcc	.-10     	; 0x1064 <strnlen+0x2>
    106e:	80 95       	com	r24
    1070:	90 95       	com	r25
    1072:	8e 0f       	add	r24, r30
    1074:	9f 1f       	adc	r25, r31
    1076:	08 95       	ret

00001078 <fputc>:
    1078:	0f 93       	push	r16
    107a:	1f 93       	push	r17
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	fb 01       	movw	r30, r22
    1082:	23 81       	ldd	r18, Z+3	; 0x03
    1084:	21 fd       	sbrc	r18, 1
    1086:	03 c0       	rjmp	.+6      	; 0x108e <fputc+0x16>
    1088:	8f ef       	ldi	r24, 0xFF	; 255
    108a:	9f ef       	ldi	r25, 0xFF	; 255
    108c:	2c c0       	rjmp	.+88     	; 0x10e6 <fputc+0x6e>
    108e:	22 ff       	sbrs	r18, 2
    1090:	16 c0       	rjmp	.+44     	; 0x10be <fputc+0x46>
    1092:	46 81       	ldd	r20, Z+6	; 0x06
    1094:	57 81       	ldd	r21, Z+7	; 0x07
    1096:	24 81       	ldd	r18, Z+4	; 0x04
    1098:	35 81       	ldd	r19, Z+5	; 0x05
    109a:	42 17       	cp	r20, r18
    109c:	53 07       	cpc	r21, r19
    109e:	44 f4       	brge	.+16     	; 0x10b0 <fputc+0x38>
    10a0:	a0 81       	ld	r26, Z
    10a2:	b1 81       	ldd	r27, Z+1	; 0x01
    10a4:	9d 01       	movw	r18, r26
    10a6:	2f 5f       	subi	r18, 0xFF	; 255
    10a8:	3f 4f       	sbci	r19, 0xFF	; 255
    10aa:	31 83       	std	Z+1, r19	; 0x01
    10ac:	20 83       	st	Z, r18
    10ae:	8c 93       	st	X, r24
    10b0:	26 81       	ldd	r18, Z+6	; 0x06
    10b2:	37 81       	ldd	r19, Z+7	; 0x07
    10b4:	2f 5f       	subi	r18, 0xFF	; 255
    10b6:	3f 4f       	sbci	r19, 0xFF	; 255
    10b8:	37 83       	std	Z+7, r19	; 0x07
    10ba:	26 83       	std	Z+6, r18	; 0x06
    10bc:	14 c0       	rjmp	.+40     	; 0x10e6 <fputc+0x6e>
    10be:	8b 01       	movw	r16, r22
    10c0:	ec 01       	movw	r28, r24
    10c2:	fb 01       	movw	r30, r22
    10c4:	00 84       	ldd	r0, Z+8	; 0x08
    10c6:	f1 85       	ldd	r31, Z+9	; 0x09
    10c8:	e0 2d       	mov	r30, r0
    10ca:	09 95       	icall
    10cc:	89 2b       	or	r24, r25
    10ce:	e1 f6       	brne	.-72     	; 0x1088 <fputc+0x10>
    10d0:	d8 01       	movw	r26, r16
    10d2:	16 96       	adiw	r26, 0x06	; 6
    10d4:	8d 91       	ld	r24, X+
    10d6:	9c 91       	ld	r25, X
    10d8:	17 97       	sbiw	r26, 0x07	; 7
    10da:	01 96       	adiw	r24, 0x01	; 1
    10dc:	17 96       	adiw	r26, 0x07	; 7
    10de:	9c 93       	st	X, r25
    10e0:	8e 93       	st	-X, r24
    10e2:	16 97       	sbiw	r26, 0x06	; 6
    10e4:	ce 01       	movw	r24, r28
    10e6:	df 91       	pop	r29
    10e8:	cf 91       	pop	r28
    10ea:	1f 91       	pop	r17
    10ec:	0f 91       	pop	r16
    10ee:	08 95       	ret

000010f0 <sprintf>:
    10f0:	ae e0       	ldi	r26, 0x0E	; 14
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	ed e7       	ldi	r30, 0x7D	; 125
    10f6:	f8 e0       	ldi	r31, 0x08	; 8
    10f8:	a8 ce       	rjmp	.-688    	; 0xe4a <__prologue_saves__+0x1c>
    10fa:	0d 89       	ldd	r16, Y+21	; 0x15
    10fc:	1e 89       	ldd	r17, Y+22	; 0x16
    10fe:	86 e0       	ldi	r24, 0x06	; 6
    1100:	8c 83       	std	Y+4, r24	; 0x04
    1102:	1a 83       	std	Y+2, r17	; 0x02
    1104:	09 83       	std	Y+1, r16	; 0x01
    1106:	8f ef       	ldi	r24, 0xFF	; 255
    1108:	9f e7       	ldi	r25, 0x7F	; 127
    110a:	9e 83       	std	Y+6, r25	; 0x06
    110c:	8d 83       	std	Y+5, r24	; 0x05
    110e:	ae 01       	movw	r20, r28
    1110:	47 5e       	subi	r20, 0xE7	; 231
    1112:	5f 4f       	sbci	r21, 0xFF	; 255
    1114:	6f 89       	ldd	r22, Y+23	; 0x17
    1116:	78 8d       	ldd	r23, Y+24	; 0x18
    1118:	ce 01       	movw	r24, r28
    111a:	01 96       	adiw	r24, 0x01	; 1
    111c:	2a db       	rcall	.-2476   	; 0x772 <vfprintf>
    111e:	ef 81       	ldd	r30, Y+7	; 0x07
    1120:	f8 85       	ldd	r31, Y+8	; 0x08
    1122:	e0 0f       	add	r30, r16
    1124:	f1 1f       	adc	r31, r17
    1126:	10 82       	st	Z, r1
    1128:	2e 96       	adiw	r28, 0x0e	; 14
    112a:	e4 e0       	ldi	r30, 0x04	; 4
    112c:	aa ce       	rjmp	.-684    	; 0xe82 <__epilogue_restores__+0x1c>

0000112e <__ultoa_invert>:
    112e:	fa 01       	movw	r30, r20
    1130:	aa 27       	eor	r26, r26
    1132:	28 30       	cpi	r18, 0x08	; 8
    1134:	51 f1       	breq	.+84     	; 0x118a <__ultoa_invert+0x5c>
    1136:	20 31       	cpi	r18, 0x10	; 16
    1138:	81 f1       	breq	.+96     	; 0x119a <__ultoa_invert+0x6c>
    113a:	e8 94       	clt
    113c:	6f 93       	push	r22
    113e:	6e 7f       	andi	r22, 0xFE	; 254
    1140:	6e 5f       	subi	r22, 0xFE	; 254
    1142:	7f 4f       	sbci	r23, 0xFF	; 255
    1144:	8f 4f       	sbci	r24, 0xFF	; 255
    1146:	9f 4f       	sbci	r25, 0xFF	; 255
    1148:	af 4f       	sbci	r26, 0xFF	; 255
    114a:	b1 e0       	ldi	r27, 0x01	; 1
    114c:	3e d0       	rcall	.+124    	; 0x11ca <__ultoa_invert+0x9c>
    114e:	b4 e0       	ldi	r27, 0x04	; 4
    1150:	3c d0       	rcall	.+120    	; 0x11ca <__ultoa_invert+0x9c>
    1152:	67 0f       	add	r22, r23
    1154:	78 1f       	adc	r23, r24
    1156:	89 1f       	adc	r24, r25
    1158:	9a 1f       	adc	r25, r26
    115a:	a1 1d       	adc	r26, r1
    115c:	68 0f       	add	r22, r24
    115e:	79 1f       	adc	r23, r25
    1160:	8a 1f       	adc	r24, r26
    1162:	91 1d       	adc	r25, r1
    1164:	a1 1d       	adc	r26, r1
    1166:	6a 0f       	add	r22, r26
    1168:	71 1d       	adc	r23, r1
    116a:	81 1d       	adc	r24, r1
    116c:	91 1d       	adc	r25, r1
    116e:	a1 1d       	adc	r26, r1
    1170:	20 d0       	rcall	.+64     	; 0x11b2 <__ultoa_invert+0x84>
    1172:	09 f4       	brne	.+2      	; 0x1176 <__ultoa_invert+0x48>
    1174:	68 94       	set
    1176:	3f 91       	pop	r19
    1178:	2a e0       	ldi	r18, 0x0A	; 10
    117a:	26 9f       	mul	r18, r22
    117c:	11 24       	eor	r1, r1
    117e:	30 19       	sub	r19, r0
    1180:	30 5d       	subi	r19, 0xD0	; 208
    1182:	31 93       	st	Z+, r19
    1184:	de f6       	brtc	.-74     	; 0x113c <__ultoa_invert+0xe>
    1186:	cf 01       	movw	r24, r30
    1188:	08 95       	ret
    118a:	46 2f       	mov	r20, r22
    118c:	47 70       	andi	r20, 0x07	; 7
    118e:	40 5d       	subi	r20, 0xD0	; 208
    1190:	41 93       	st	Z+, r20
    1192:	b3 e0       	ldi	r27, 0x03	; 3
    1194:	0f d0       	rcall	.+30     	; 0x11b4 <__ultoa_invert+0x86>
    1196:	c9 f7       	brne	.-14     	; 0x118a <__ultoa_invert+0x5c>
    1198:	f6 cf       	rjmp	.-20     	; 0x1186 <__ultoa_invert+0x58>
    119a:	46 2f       	mov	r20, r22
    119c:	4f 70       	andi	r20, 0x0F	; 15
    119e:	40 5d       	subi	r20, 0xD0	; 208
    11a0:	4a 33       	cpi	r20, 0x3A	; 58
    11a2:	18 f0       	brcs	.+6      	; 0x11aa <__ultoa_invert+0x7c>
    11a4:	49 5d       	subi	r20, 0xD9	; 217
    11a6:	31 fd       	sbrc	r19, 1
    11a8:	40 52       	subi	r20, 0x20	; 32
    11aa:	41 93       	st	Z+, r20
    11ac:	02 d0       	rcall	.+4      	; 0x11b2 <__ultoa_invert+0x84>
    11ae:	a9 f7       	brne	.-22     	; 0x119a <__ultoa_invert+0x6c>
    11b0:	ea cf       	rjmp	.-44     	; 0x1186 <__ultoa_invert+0x58>
    11b2:	b4 e0       	ldi	r27, 0x04	; 4
    11b4:	a6 95       	lsr	r26
    11b6:	97 95       	ror	r25
    11b8:	87 95       	ror	r24
    11ba:	77 95       	ror	r23
    11bc:	67 95       	ror	r22
    11be:	ba 95       	dec	r27
    11c0:	c9 f7       	brne	.-14     	; 0x11b4 <__ultoa_invert+0x86>
    11c2:	00 97       	sbiw	r24, 0x00	; 0
    11c4:	61 05       	cpc	r22, r1
    11c6:	71 05       	cpc	r23, r1
    11c8:	08 95       	ret
    11ca:	9b 01       	movw	r18, r22
    11cc:	ac 01       	movw	r20, r24
    11ce:	0a 2e       	mov	r0, r26
    11d0:	06 94       	lsr	r0
    11d2:	57 95       	ror	r21
    11d4:	47 95       	ror	r20
    11d6:	37 95       	ror	r19
    11d8:	27 95       	ror	r18
    11da:	ba 95       	dec	r27
    11dc:	c9 f7       	brne	.-14     	; 0x11d0 <__ultoa_invert+0xa2>
    11de:	62 0f       	add	r22, r18
    11e0:	73 1f       	adc	r23, r19
    11e2:	84 1f       	adc	r24, r20
    11e4:	95 1f       	adc	r25, r21
    11e6:	a0 1d       	adc	r26, r0
    11e8:	08 95       	ret

000011ea <_exit>:
    11ea:	f8 94       	cli

000011ec <__stop_program>:
    11ec:	ff cf       	rjmp	.-2      	; 0x11ec <__stop_program>
